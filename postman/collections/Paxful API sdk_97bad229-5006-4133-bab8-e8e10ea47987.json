{
    "info": {
        "_postman_id": "a6bab153-630a-4b75-a76c-3365cee2f815",
        "name": "Paxful API sdk",
        "description": "Error List: <br>\n1001 - User provided an unknown type in the 'offer_type_field' parameter <br>\n1002 - The offer requested by hash was not found <br>\n1003 - Request payload is missing some required parameters <br>\n1004 - Error while validating input parameters. For example sending offer data to create an offer <br>\n1005 - Unknown server error <br>\n1006 - No access. For example deleting offer not belonging to you. <br>\n1007 - Trade action failed <br>\n1008 - Payment method not found <br>\n1009 - Unable to generate address, admin notified <br>\n1010 - Failed to fetch resources, try again. <br>\n1011 - Target user not found <br>\n1012 - Generate an API key first <br>\n1013 - This endpoint is forbidden for you. <br>\n1014 - Invalid JWT scope. <br>\n\n# Authentication\nFor a more detailed explanation and recommendations regarding which authentication method to use in your case please refer to <a href='//developers.paxful.com/documentation/paxful-api#Authentication' target='_blank' style='text-decoration: underline'>Paxful API authentication</a>.",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "user",
            "item": [
                {
                    "name": "user/me",
                    "id": "6dbc6676-ebf7-4b05-aca3-8c97b896f317",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": []
                        },
                        "url": {
                            "raw": "{{baseUrl}}/user/me",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user",
                                "me"
                            ]
                        },
                        "description": "Fetch information for a current user."
                    },
                    "response": [
                        {
                            "id": "a97080b1-3766-431d-9160-a7ea6730748c",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": []
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/user/me",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "user",
                                        "me"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"uid\": \"<uuid_string>\",\n    \"joined\": \"3 months ago\",\n    \"status\": \"active\",\n    \"username\": \"Username\",\n    \"is_vendor\": true,\n    \"last_seen\": \"Seen 2 hours ago\",\n    \"total_btc\": \"Less than 1\",\n    \"avatar_url\": \"/2/images/avatar.png\",\n    \"blocked_by\": 1,\n    \"trusted_by\": 10,\n    \"is_verified\": true,\n    \"total_trades\": 10,\n    \"referral_link\": \"https://paxful.com/?r=somehash\",\n    \"email_verified\": false,\n    \"phone_verified\": false,\n    \"total_partners\": 1,\n    \"feedback_negative\": 0,\n    \"feedback_positive\": 10,\n    \"total_crypto_traded\": {\n      \"btc\": \"Less than 10\",\n      \"eth\": \"Less than 10K\",\n      \"usdt\": \"Less than 10K\"\n    }\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "user/info",
                    "id": "14df881b-2c2d-4fb2-a12b-eef07129b55f",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "username",
                                    "value": "velit sed",
                                    "description": "(Required) Username of the user."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/user/info",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user",
                                "info"
                            ]
                        },
                        "description": "Fetch information for a user."
                    },
                    "response": [
                        {
                            "id": "e2bf1233-1541-4ad4-9937-0416cf988720",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) Username of the user.",
                                            "key": "username",
                                            "value": "velit sed"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/user/info",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "user",
                                        "info"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"uid\": \"<uuid_string>\",\n    \"joined\": \"3 months ago\",\n    \"status\": \"active\",\n    \"username\": \"<string>\",\n    \"is_vendor\": false,\n    \"last_seen\": \"Seen 2 hours ago\",\n    \"total_btc\": \"Less than 1\",\n    \"blocked_by\": 1,\n    \"created_at\": \"2018-01-01\",\n    \"is_trusted\": false,\n    \"trusted_by\": 10,\n    \"is_verified\": true,\n    \"total_trades\": 10,\n    \"trades_total\": 1,\n    \"blocked_count\": 1,\n    \"email_verified\": true,\n    \"phone_verified\": false,\n    \"total_partners\": 1,\n    \"first_trade_date\": \"2019-01-01\",\n    \"feedback_negative\": 0,\n    \"feedback_positive\": 10,\n    \"total_crypto_traded\": {\n      \"btc\": \"Less than 10\",\n      \"eth\": \"Less than 10K\",\n      \"usdt\": \"Less than 10K\"\n    },\n    \"completed_trades_with_me\": 1\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "ea482c09-3e04-497b-89f5-59f2db5937f5",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) Username of the user.",
                                            "key": "username",
                                            "value": "velit sed"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/user/info",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "user",
                                        "info"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1003,\n    \"message\": \"The username field is required\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "user/block",
                    "id": "b29f2df7-e588-49be-87fa-33a889dfb3f9",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "username",
                                    "value": "velit sed",
                                    "description": "(Required) Username of the user."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/user/block",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user",
                                "block"
                            ]
                        },
                        "description": "Add username to blocked list"
                    },
                    "response": [
                        {
                            "id": "16808e05-c252-41af-954a-3a3e2c94a6bb",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) Username of the user.",
                                            "key": "username",
                                            "value": "velit sed"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/user/block",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "user",
                                        "block"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {},\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "04cb83ba-0a1f-46b8-8cab-408fbabe9261",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) Username of the user.",
                                            "key": "username",
                                            "value": "velit sed"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/user/block",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "user",
                                        "block"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1003,\n    \"message\": \"The username field is required\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "user/touch",
                    "id": "4f66d87c-5142-4843-a27d-4136649173c4",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": []
                        },
                        "url": {
                            "raw": "{{baseUrl}}/user/touch",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user",
                                "touch"
                            ]
                        },
                        "description": "Deprecated. You don't need to use this endpoint directly, last seen time is going to be updated\n    automatically if you use other API endpoints.\n    Refresh your last seen time. This endpoint has its own rate limit and is limited to 360 requests per hour\n    (every 10 second max)."
                    },
                    "response": [
                        {
                            "id": "eea6113a-ea15-41d1-8ab3-0b4bff61ffac",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": []
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/user/touch",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "user",
                                        "touch"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {},\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "user/trust",
                    "id": "b7ebe651-dd72-4922-abaf-6e0298d27d44",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "username",
                                    "value": "velit sed",
                                    "description": "(Required) Username of the user."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/user/trust",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user",
                                "trust"
                            ]
                        },
                        "description": "Add username to the trusted user list."
                    },
                    "response": [
                        {
                            "id": "ab17bbe0-ada4-4986-8f55-14817d15374f",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) Username of the user.",
                                            "key": "username",
                                            "value": "velit sed"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/user/trust",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "user",
                                        "trust"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {},\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "c731da62-d6c0-4228-8721-b70378b10516",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) Username of the user.",
                                            "key": "username",
                                            "value": "velit sed"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/user/trust",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "user",
                                        "trust"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1003,\n    \"message\": \"The username field is required\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "user/types",
                    "id": "462fb729-d488-4452-bb8d-a55b00d532d9",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": []
                        },
                        "url": {
                            "raw": "{{baseUrl}}/user/types",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user",
                                "types"
                            ]
                        },
                        "description": "Returns a list of available user types. For example - power_trader, expert_trader, etc.\n     This parameter can be used as “user_type” in offer/all endpoint."
                    },
                    "response": [
                        {
                            "id": "36f9bc73-5e38-48b1-8ee6-e73c158d97d0",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": []
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/user/types",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "user",
                                        "types"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"count\": 10,\n    \"types\": [\n      {\n        \"id\": 1,\n        \"name\": \"Power trader\",\n        \"alias\": \"power_trader\",\n        \"description\": \"Some description\"\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Power trader\",\n        \"alias\": \"power_trader\",\n        \"description\": \"Some description\"\n      }\n    ]\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "user/unblock",
                    "id": "ac12dccb-e0d1-4bc7-855c-45a34cd3524a",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "username",
                                    "value": "velit sed",
                                    "description": "(Required) Username of the user."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/user/unblock",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user",
                                "unblock"
                            ]
                        },
                        "description": "Remove user from blocked list."
                    },
                    "response": [
                        {
                            "id": "4b4c6799-472d-4a90-b750-be51789b2c5e",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) Username of the user.",
                                            "key": "username",
                                            "value": "velit sed"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/user/unblock",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "user",
                                        "unblock"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {},\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "f2865177-023b-4134-8ffb-4e7c19fcae8b",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) Username of the user.",
                                            "key": "username",
                                            "value": "velit sed"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/user/unblock",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "user",
                                        "unblock"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1003,\n    \"message\": \"The username field is required\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "user/untrust",
                    "id": "aebc66f8-e271-4e97-92c5-ef77032e3112",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "username",
                                    "value": "velit sed",
                                    "description": "(Required) Username of the user."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/user/untrust",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user",
                                "untrust"
                            ]
                        },
                        "description": "Remove username from the trusted list."
                    },
                    "response": [
                        {
                            "id": "591b9e81-9fb1-45ad-a812-c829274b59cd",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) Username of the user.",
                                            "key": "username",
                                            "value": "velit sed"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/user/untrust",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "user",
                                        "untrust"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {},\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "7e4c724c-27ed-4c02-9e79-77f17c117b43",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) Username of the user.",
                                            "key": "username",
                                            "value": "velit sed"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/user/untrust",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "user",
                                        "untrust"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1003,\n    \"message\": \"The username field is required\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "user/affiliate",
                    "id": "1f123770-67c1-4bed-b753-03bdc7d462a1",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": []
                        },
                        "url": {
                            "raw": "{{baseUrl}}/user/affiliate",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user",
                                "affiliate"
                            ]
                        },
                        "description": "Get user affiliate info"
                    },
                    "response": [
                        {
                            "id": "ffe7db12-f8a3-46bb-b5ab-4cba4ad0a3c7",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": []
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/user/affiliate",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "user",
                                        "affiliate"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"affiliates_count\": {\n      \"tier_1\": 10,\n      \"tier_2\": 10\n    },\n    \"affiliate_balance\": \"100.10\",\n    \"fiat_currency_code\": \"USD\"\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "user/blocked-list",
                    "id": "9c28de88-e85f-4bb1-afb4-3482dd4949f1",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "page",
                                    "value": "1",
                                    "description": "Requested page, by default is 1."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/user/blocked-list",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user",
                                "blocked-list"
                            ]
                        },
                        "description": "Fetch a list of your blocked users."
                    },
                    "response": [
                        {
                            "id": "000f9c66-c1fc-4339-924a-97f444813642",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "Requested page, by default is 1.",
                                            "key": "page",
                                            "value": "1"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/user/blocked-list",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "user",
                                        "blocked-list"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"page\": 1,\n    \"count\": 1,\n    \"blocked_users\": [\n      {\n        \"username\": \"SomeUsername\",\n        \"avatar_url\": \"/2/images/avatar.png\",\n        \"blocked_at\": \"2021-05-03T06:37:59-04:00\"\n      },\n      {\n        \"username\": \"SomeUsername\",\n        \"avatar_url\": \"/2/images/avatar.png\",\n        \"blocked_at\": \"2021-05-03T06:37:59-04:00\"\n      }\n    ]\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                }
            ],
            "id": "f10973dd-0bb9-4f14-967e-d99c98f2e2be"
        },
        {
            "name": "offer",
            "item": [
                {
                    "name": "offer/all",
                    "id": "08abae18-0bf2-4d3e-b785-4baa5d1727b5",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "offer_type",
                                    "value": "sell",
                                    "description": "(Required) If you would like to get offers that you can use <b>to buy crypto</b>, then in fact you need to see offers <b>where other vendors are selling crypto</b>, hence you need to specify 'buy' to get 'sell' offers and vice versa. If you just would like to get offers filtered by type they have, then you can use 'type' parameter instead. Either 'offer_type' or 'type' filter needs to be provided. If this filter is provided then 'type' will be ignored."
                                },
                                {
                                    "key": "type",
                                    "value": "sell",
                                    "description": "Will return offers of given type without applying a domain logic that 'offer_type' filter has. If you specify 'sell' then offers with this type will be returned and so on. See also offer_type filter. Either 'offer_type' or 'type' filter needs to be provided. If 'offer_type' filter is provided then this filter will be ignored. Possible values: 'buy', 'sell'."
                                },
                                {
                                    "key": "group",
                                    "value": "online-transfers",
                                    "description": "A group of payment methods(slug). For a list of available payment method groups please refer to payment-method-group/list endpoint."
                                },
                                {
                                    "key": "limit",
                                    "value": "10",
                                    "description": "How many offers to return."
                                },
                                {
                                    "key": "offset",
                                    "value": "0",
                                    "description": "An offset for a result."
                                },
                                {
                                    "key": "fiat_min",
                                    "value": "3930687.6776596904",
                                    "description": "Will return offers where this value either fits into trade limits or equals to a predefined amount."
                                },
                                {
                                    "key": "geoname_id",
                                    "value": "40281629.67390311",
                                    "description": "Deprecated field. Please use location_id."
                                },
                                {
                                    "key": "margin_max",
                                    "value": "-47252545.24215496",
                                    "description": "Search offers with margin less than the value. Ignored when offer is of fixed price."
                                },
                                {
                                    "key": "margin_min",
                                    "value": "16610578.721922264",
                                    "description": "Search offers with margin greater than the value. Ignored when offer is of fixed price."
                                },
                                {
                                    "key": "offer_tags",
                                    "value": "online-payments,cash-only",
                                    "description": "Comma-separated list of tags. For a list of available tags please refer to offer-tag/list and use 'slug' parameter."
                                },
                                {
                                    "key": "user_types",
                                    "value": "power_trader,expert_trader",
                                    "description": "Comma-separated list of user types whose offers to return - i.e. power_trader, expert_trader. For a list of all available user types please refer to user/types endpoint. You can also provide “all” value, in this case offers of users of either available type will be returned."
                                },
                                {
                                    "key": "location_id",
                                    "value": "95770228.93570292",
                                    "description": "Location id is needed to search\nfor offers with specific payment methods, e.g. Cash in Person, Gold. If payment method is another - parameter will be ignored.\nYou can find location ids here: https://www.geonames.org/.\nFor better experience use locations ids of countries and cities."
                                },
                                {
                                    "key": "user_country",
                                    "value": "US",
                                    "description": "ISO country code, e.g. 'US'. Filter offers by available payment methods in the given country. Please use 'WORLDWIDE' if you want to get offers from all countries.\nFor authenticated user by default automatically detected country will be used. For non-authenticated user 'US' will be used. This filter corresponds to 'Offer location' filter available on marketplace."
                                },
                                {
                                    "key": "currency_code",
                                    "value": "USD",
                                    "description": "3 letter ISO code for fiat currency. 'USD' or any other. Case insensitive."
                                },
                                {
                                    "key": "payment_method",
                                    "value": "applepay",
                                    "description": "A slug of the payment method. To see a list of payment method slugs please refer to payment-method/list endpoint."
                                },
                                {
                                    "key": "fiat_amount_max",
                                    "value": "10000",
                                    "description": "Search offers with trade limit less than the value."
                                },
                                {
                                    "key": "fiat_amount_min",
                                    "value": "1",
                                    "description": "Search offers with trade limit greater than the value."
                                },
                                {
                                    "key": "crypto_currency_code",
                                    "value": "btc",
                                    "description": "A filter by crypto currency code, default is 'btc'. For a list of current supported cryptocurrencies please refer to crypto/list endpoint."
                                },
                                {
                                    "key": "fiat_fixed_price_max",
                                    "value": "14233391.689647675",
                                    "description": "Search offers with fiat price per crypto less than the value."
                                },
                                {
                                    "key": "fiat_fixed_price_min",
                                    "value": "-3198793.3314323127",
                                    "description": "Search offers with fiat price per crypto greater than the value."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/offer/all",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "offer",
                                "all"
                            ]
                        },
                        "description": "Fetch offers. Authentication is optional\n        (replaces deprecated method of /buy-bitcoin?format=json, results are cached for 1 minute)."
                    },
                    "response": [
                        {
                            "id": "56c606e6-95f2-4874-acac-0d38e8be62e2",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) If you would like to get offers that you can use <b>to buy crypto</b>, then in fact you need to see offers <b>where other vendors are selling crypto</b>, hence you need to specify 'buy' to get 'sell' offers and vice versa. If you just would like to get offers filtered by type they have, then you can use 'type' parameter instead. Either 'offer_type' or 'type' filter needs to be provided. If this filter is provided then 'type' will be ignored.",
                                            "key": "offer_type",
                                            "value": "sell"
                                        },
                                        {
                                            "description": "Will return offers of given type without applying a domain logic that 'offer_type' filter has. If you specify 'sell' then offers with this type will be returned and so on. See also offer_type filter. Either 'offer_type' or 'type' filter needs to be provided. If 'offer_type' filter is provided then this filter will be ignored. Possible values: 'buy', 'sell'.",
                                            "key": "type",
                                            "value": "sell"
                                        },
                                        {
                                            "description": "A group of payment methods(slug). For a list of available payment method groups please refer to payment-method-group/list endpoint.",
                                            "key": "group",
                                            "value": "online-transfers"
                                        },
                                        {
                                            "description": "How many offers to return.",
                                            "key": "limit",
                                            "value": "10"
                                        },
                                        {
                                            "description": "An offset for a result.",
                                            "key": "offset",
                                            "value": "0"
                                        },
                                        {
                                            "description": "Will return offers where this value either fits into trade limits or equals to a predefined amount.",
                                            "key": "fiat_min",
                                            "value": "3930687.6776596904"
                                        },
                                        {
                                            "description": "Deprecated field. Please use location_id.",
                                            "key": "geoname_id",
                                            "value": "40281629.67390311"
                                        },
                                        {
                                            "description": "Search offers with margin less than the value. Ignored when offer is of fixed price.",
                                            "key": "margin_max",
                                            "value": "-47252545.24215496"
                                        },
                                        {
                                            "description": "Search offers with margin greater than the value. Ignored when offer is of fixed price.",
                                            "key": "margin_min",
                                            "value": "16610578.721922264"
                                        },
                                        {
                                            "description": "Comma-separated list of tags. For a list of available tags please refer to offer-tag/list and use 'slug' parameter.",
                                            "key": "offer_tags",
                                            "value": "online-payments,cash-only"
                                        },
                                        {
                                            "description": "Comma-separated list of user types whose offers to return - i.e. power_trader, expert_trader. For a list of all available user types please refer to user/types endpoint. You can also provide “all” value, in this case offers of users of either available type will be returned.",
                                            "key": "user_types",
                                            "value": "power_trader,expert_trader"
                                        },
                                        {
                                            "description": "Location id is needed to search\nfor offers with specific payment methods, e.g. Cash in Person, Gold. If payment method is another - parameter will be ignored.\nYou can find location ids here: https://www.geonames.org/.\nFor better experience use locations ids of countries and cities.",
                                            "key": "location_id",
                                            "value": "95770228.93570292"
                                        },
                                        {
                                            "description": "ISO country code, e.g. 'US'. Filter offers by available payment methods in the given country. Please use 'WORLDWIDE' if you want to get offers from all countries.\nFor authenticated user by default automatically detected country will be used. For non-authenticated user 'US' will be used. This filter corresponds to 'Offer location' filter available on marketplace.",
                                            "key": "user_country",
                                            "value": "US"
                                        },
                                        {
                                            "description": "3 letter ISO code for fiat currency. 'USD' or any other. Case insensitive.",
                                            "key": "currency_code",
                                            "value": "USD"
                                        },
                                        {
                                            "description": "A slug of the payment method. To see a list of payment method slugs please refer to payment-method/list endpoint.",
                                            "key": "payment_method",
                                            "value": "applepay"
                                        },
                                        {
                                            "description": "Search offers with trade limit less than the value.",
                                            "key": "fiat_amount_max",
                                            "value": "10000"
                                        },
                                        {
                                            "description": "Search offers with trade limit greater than the value.",
                                            "key": "fiat_amount_min",
                                            "value": "1"
                                        },
                                        {
                                            "description": "A filter by crypto currency code, default is 'btc'. For a list of current supported cryptocurrencies please refer to crypto/list endpoint.",
                                            "key": "crypto_currency_code",
                                            "value": "btc"
                                        },
                                        {
                                            "description": "Search offers with fiat price per crypto less than the value.",
                                            "key": "fiat_fixed_price_max",
                                            "value": "14233391.689647675"
                                        },
                                        {
                                            "description": "Search offers with fiat price per crypto greater than the value.",
                                            "key": "fiat_fixed_price_min",
                                            "value": "-3198793.3314323127"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/all",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "all"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"count\": 50,\n    \"limit\": 50,\n    \"offers\": [\n      {\n        \"tags\": [\n          {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"slug\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"slug\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"active\": true,\n        \"margin\": -67555028.29926679,\n        \"offer_id\": \"<string>\",\n        \"city_name\": \"ex\",\n        \"last_seen\": \"seen-long-ago\",\n        \"crypto_max\": 21459374.749778032,\n        \"crypto_min\": -68138153.63706128,\n        \"duty_hours\": [\n          {\n            \"day\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end_time\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"start_time\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"day\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end_time\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"start_time\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"geoname_id\": 1,\n        \"is_blocked\": true,\n        \"offer_link\": \"http://host/offer/offerhash123\",\n        \"offer_type\": \"buy\",\n        \"seller_fee\": \"0.01\",\n        \"is_featured\": true,\n        \"location_id\": 1,\n        \"offer_terms\": \"Some text\",\n        \"country_name\": \"id\",\n        \"currency_code\": \"USD\",\n        \"fee_percentage\": 70455714.85454309,\n        \"payment_window\": 90,\n        \"subdivision_name\": \"sit\",\n        \"fiat_currency_code\": \"USD\",\n        \"fiat_price_per_btc\": 5469063.415272668,\n        \"last_seen_timestamp\": 1455032576,\n        \"payment_method_name\": \"Webmoney\",\n        \"payment_method_slug\": \"applepay\",\n        \"require_verified_id\": true,\n        \"crypto_currency_code\": \"BTC\",\n        \"offer_owner_username\": \"enim commodo occaecat\",\n        \"payment_method_group\": \"online-transfers\",\n        \"payment_method_label\": \"Some text\",\n        \"fiat_amount_range_max\": 100,\n        \"fiat_amount_range_min\": 10,\n        \"fiat_price_per_crypto\": -92873992.89061873,\n        \"fiat_USD_price_per_btc\": 63460006.80047178,\n        \"require_verified_email\": false,\n        \"require_verified_phone\": true,\n        \"offer_owner_country_iso\": \"US\",\n        \"require_min_past_trades\": \"rep\",\n        \"offer_owner_profile_link\": \"http://host/user/user123\",\n        \"fiat_usd_price_per_crypto\": -74394302.71266736,\n        \"offer_owner_feedback_negative\": 1,\n        \"offer_owner_feedback_positive\": 10\n      },\n      {\n        \"tags\": [\n          {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"slug\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"slug\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"active\": false,\n        \"margin\": 75818128.23992845,\n        \"offer_id\": \"<string>\",\n        \"city_name\": \"cillum sit\",\n        \"last_seen\": \"seen-long-ago\",\n        \"crypto_max\": 87676684.97287863,\n        \"crypto_min\": -45201469.76872321,\n        \"duty_hours\": [\n          {\n            \"day\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end_time\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"start_time\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"day\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end_time\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"start_time\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"geoname_id\": 1,\n        \"is_blocked\": true,\n        \"offer_link\": \"http://host/offer/offerhash123\",\n        \"offer_type\": \"sell\",\n        \"seller_fee\": \"0.01\",\n        \"is_featured\": false,\n        \"location_id\": 1,\n        \"offer_terms\": \"Some text\",\n        \"country_name\": \"velit laborum eiusmod\",\n        \"currency_code\": \"USD\",\n        \"fee_percentage\": -6181001.971833438,\n        \"payment_window\": 90,\n        \"subdivision_name\": \"dolore sed ea\",\n        \"fiat_currency_code\": \"USD\",\n        \"fiat_price_per_btc\": -99733039.44231388,\n        \"last_seen_timestamp\": 1455032576,\n        \"payment_method_name\": \"Webmoney\",\n        \"payment_method_slug\": \"applepay\",\n        \"require_verified_id\": true,\n        \"crypto_currency_code\": \"BTC\",\n        \"offer_owner_username\": \"proident\",\n        \"payment_method_group\": \"online-transfers\",\n        \"payment_method_label\": \"Some text\",\n        \"fiat_amount_range_max\": 100,\n        \"fiat_amount_range_min\": 10,\n        \"fiat_price_per_crypto\": 37655783.29723361,\n        \"fiat_USD_price_per_btc\": 86363919.25985366,\n        \"require_verified_email\": false,\n        \"require_verified_phone\": false,\n        \"offer_owner_country_iso\": \"US\",\n        \"require_min_past_trades\": \"in ex laboris\",\n        \"offer_owner_profile_link\": \"http://host/user/user123\",\n        \"fiat_usd_price_per_crypto\": -29123500.644476414,\n        \"offer_owner_feedback_negative\": 1,\n        \"offer_owner_feedback_positive\": 10\n      }\n    ],\n    \"offset\": 0,\n    \"totalCount\": 100\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "f9c0402f-e7e8-4567-b46a-ce26dac3a90c",
                            "name": "Not found",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) If you would like to get offers that you can use <b>to buy crypto</b>, then in fact you need to see offers <b>where other vendors are selling crypto</b>, hence you need to specify 'buy' to get 'sell' offers and vice versa. If you just would like to get offers filtered by type they have, then you can use 'type' parameter instead. Either 'offer_type' or 'type' filter needs to be provided. If this filter is provided then 'type' will be ignored.",
                                            "key": "offer_type",
                                            "value": "sell"
                                        },
                                        {
                                            "description": "Will return offers of given type without applying a domain logic that 'offer_type' filter has. If you specify 'sell' then offers with this type will be returned and so on. See also offer_type filter. Either 'offer_type' or 'type' filter needs to be provided. If 'offer_type' filter is provided then this filter will be ignored. Possible values: 'buy', 'sell'.",
                                            "key": "type",
                                            "value": "sell"
                                        },
                                        {
                                            "description": "A group of payment methods(slug). For a list of available payment method groups please refer to payment-method-group/list endpoint.",
                                            "key": "group",
                                            "value": "online-transfers"
                                        },
                                        {
                                            "description": "How many offers to return.",
                                            "key": "limit",
                                            "value": "10"
                                        },
                                        {
                                            "description": "An offset for a result.",
                                            "key": "offset",
                                            "value": "0"
                                        },
                                        {
                                            "description": "Will return offers where this value either fits into trade limits or equals to a predefined amount.",
                                            "key": "fiat_min",
                                            "value": "3930687.6776596904"
                                        },
                                        {
                                            "description": "Deprecated field. Please use location_id.",
                                            "key": "geoname_id",
                                            "value": "40281629.67390311"
                                        },
                                        {
                                            "description": "Search offers with margin less than the value. Ignored when offer is of fixed price.",
                                            "key": "margin_max",
                                            "value": "-47252545.24215496"
                                        },
                                        {
                                            "description": "Search offers with margin greater than the value. Ignored when offer is of fixed price.",
                                            "key": "margin_min",
                                            "value": "16610578.721922264"
                                        },
                                        {
                                            "description": "Comma-separated list of tags. For a list of available tags please refer to offer-tag/list and use 'slug' parameter.",
                                            "key": "offer_tags",
                                            "value": "online-payments,cash-only"
                                        },
                                        {
                                            "description": "Comma-separated list of user types whose offers to return - i.e. power_trader, expert_trader. For a list of all available user types please refer to user/types endpoint. You can also provide “all” value, in this case offers of users of either available type will be returned.",
                                            "key": "user_types",
                                            "value": "power_trader,expert_trader"
                                        },
                                        {
                                            "description": "Location id is needed to search\nfor offers with specific payment methods, e.g. Cash in Person, Gold. If payment method is another - parameter will be ignored.\nYou can find location ids here: https://www.geonames.org/.\nFor better experience use locations ids of countries and cities.",
                                            "key": "location_id",
                                            "value": "95770228.93570292"
                                        },
                                        {
                                            "description": "ISO country code, e.g. 'US'. Filter offers by available payment methods in the given country. Please use 'WORLDWIDE' if you want to get offers from all countries.\nFor authenticated user by default automatically detected country will be used. For non-authenticated user 'US' will be used. This filter corresponds to 'Offer location' filter available on marketplace.",
                                            "key": "user_country",
                                            "value": "US"
                                        },
                                        {
                                            "description": "3 letter ISO code for fiat currency. 'USD' or any other. Case insensitive.",
                                            "key": "currency_code",
                                            "value": "USD"
                                        },
                                        {
                                            "description": "A slug of the payment method. To see a list of payment method slugs please refer to payment-method/list endpoint.",
                                            "key": "payment_method",
                                            "value": "applepay"
                                        },
                                        {
                                            "description": "Search offers with trade limit less than the value.",
                                            "key": "fiat_amount_max",
                                            "value": "10000"
                                        },
                                        {
                                            "description": "Search offers with trade limit greater than the value.",
                                            "key": "fiat_amount_min",
                                            "value": "1"
                                        },
                                        {
                                            "description": "A filter by crypto currency code, default is 'btc'. For a list of current supported cryptocurrencies please refer to crypto/list endpoint.",
                                            "key": "crypto_currency_code",
                                            "value": "btc"
                                        },
                                        {
                                            "description": "Search offers with fiat price per crypto less than the value.",
                                            "key": "fiat_fixed_price_max",
                                            "value": "14233391.689647675"
                                        },
                                        {
                                            "description": "Search offers with fiat price per crypto greater than the value.",
                                            "key": "fiat_fixed_price_min",
                                            "value": "-3198793.3314323127"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/all",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "all"
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1002,\n    \"message\": \"Offer not found\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "6954b991-4556-4d79-bcc2-3a19d020d890",
                            "name": "Validation error",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) If you would like to get offers that you can use <b>to buy crypto</b>, then in fact you need to see offers <b>where other vendors are selling crypto</b>, hence you need to specify 'buy' to get 'sell' offers and vice versa. If you just would like to get offers filtered by type they have, then you can use 'type' parameter instead. Either 'offer_type' or 'type' filter needs to be provided. If this filter is provided then 'type' will be ignored.",
                                            "key": "offer_type",
                                            "value": "sell"
                                        },
                                        {
                                            "description": "Will return offers of given type without applying a domain logic that 'offer_type' filter has. If you specify 'sell' then offers with this type will be returned and so on. See also offer_type filter. Either 'offer_type' or 'type' filter needs to be provided. If 'offer_type' filter is provided then this filter will be ignored. Possible values: 'buy', 'sell'.",
                                            "key": "type",
                                            "value": "sell"
                                        },
                                        {
                                            "description": "A group of payment methods(slug). For a list of available payment method groups please refer to payment-method-group/list endpoint.",
                                            "key": "group",
                                            "value": "online-transfers"
                                        },
                                        {
                                            "description": "How many offers to return.",
                                            "key": "limit",
                                            "value": "10"
                                        },
                                        {
                                            "description": "An offset for a result.",
                                            "key": "offset",
                                            "value": "0"
                                        },
                                        {
                                            "description": "Will return offers where this value either fits into trade limits or equals to a predefined amount.",
                                            "key": "fiat_min",
                                            "value": "3930687.6776596904"
                                        },
                                        {
                                            "description": "Deprecated field. Please use location_id.",
                                            "key": "geoname_id",
                                            "value": "40281629.67390311"
                                        },
                                        {
                                            "description": "Search offers with margin less than the value. Ignored when offer is of fixed price.",
                                            "key": "margin_max",
                                            "value": "-47252545.24215496"
                                        },
                                        {
                                            "description": "Search offers with margin greater than the value. Ignored when offer is of fixed price.",
                                            "key": "margin_min",
                                            "value": "16610578.721922264"
                                        },
                                        {
                                            "description": "Comma-separated list of tags. For a list of available tags please refer to offer-tag/list and use 'slug' parameter.",
                                            "key": "offer_tags",
                                            "value": "online-payments,cash-only"
                                        },
                                        {
                                            "description": "Comma-separated list of user types whose offers to return - i.e. power_trader, expert_trader. For a list of all available user types please refer to user/types endpoint. You can also provide “all” value, in this case offers of users of either available type will be returned.",
                                            "key": "user_types",
                                            "value": "power_trader,expert_trader"
                                        },
                                        {
                                            "description": "Location id is needed to search\nfor offers with specific payment methods, e.g. Cash in Person, Gold. If payment method is another - parameter will be ignored.\nYou can find location ids here: https://www.geonames.org/.\nFor better experience use locations ids of countries and cities.",
                                            "key": "location_id",
                                            "value": "95770228.93570292"
                                        },
                                        {
                                            "description": "ISO country code, e.g. 'US'. Filter offers by available payment methods in the given country. Please use 'WORLDWIDE' if you want to get offers from all countries.\nFor authenticated user by default automatically detected country will be used. For non-authenticated user 'US' will be used. This filter corresponds to 'Offer location' filter available on marketplace.",
                                            "key": "user_country",
                                            "value": "US"
                                        },
                                        {
                                            "description": "3 letter ISO code for fiat currency. 'USD' or any other. Case insensitive.",
                                            "key": "currency_code",
                                            "value": "USD"
                                        },
                                        {
                                            "description": "A slug of the payment method. To see a list of payment method slugs please refer to payment-method/list endpoint.",
                                            "key": "payment_method",
                                            "value": "applepay"
                                        },
                                        {
                                            "description": "Search offers with trade limit less than the value.",
                                            "key": "fiat_amount_max",
                                            "value": "10000"
                                        },
                                        {
                                            "description": "Search offers with trade limit greater than the value.",
                                            "key": "fiat_amount_min",
                                            "value": "1"
                                        },
                                        {
                                            "description": "A filter by crypto currency code, default is 'btc'. For a list of current supported cryptocurrencies please refer to crypto/list endpoint.",
                                            "key": "crypto_currency_code",
                                            "value": "btc"
                                        },
                                        {
                                            "description": "Search offers with fiat price per crypto less than the value.",
                                            "key": "fiat_fixed_price_max",
                                            "value": "14233391.689647675"
                                        },
                                        {
                                            "description": "Search offers with fiat price per crypto greater than the value.",
                                            "key": "fiat_fixed_price_min",
                                            "value": "-3198793.3314323127"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/all",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "all"
                                    ]
                                }
                            },
                            "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                            "code": 422,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 422,\n    \"message\": \"The limit must be between 1 and 300\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "offer/get",
                    "id": "5d14febd-f42e-43eb-b340-400f657e5814",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "offer_hash",
                                    "value": "laborum irure minim",
                                    "description": "(Required) A hash (ID) of the offer."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/offer/get",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "offer",
                                "get"
                            ]
                        },
                        "description": "Fetch information for an offer."
                    },
                    "response": [
                        {
                            "id": "80d39522-8aa7-4c8b-8386-a6430da6f02e",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the offer.",
                                            "key": "offer_hash",
                                            "value": "laborum irure minim"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/get",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "get"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"tags\": [\n      {\n        \"name\": \"no vpn\",\n        \"slug\": \"no-vpn\",\n        \"description\": \"Some text\"\n      },\n      {\n        \"name\": \"no vpn\",\n        \"slug\": \"no-vpn\",\n        \"description\": \"Some text\"\n      }\n    ],\n    \"active\": true,\n    \"margin\": 9474077.05605872,\n    \"offer_id\": \"<string>\",\n    \"city_name\": \"velit consectetur\",\n    \"flow_type\": \"lite\",\n    \"last_seen\": \"seen-long-ago\",\n    \"created_at\": 1455032576,\n    \"crypto_max\": -64747733.59058115,\n    \"crypto_min\": -78415451.08000943,\n    \"duty_hours\": [\n      {\n        \"day\": 5,\n        \"active\": true,\n        \"end_time\": \"22:15\",\n        \"start_time\": \"19:30\"\n      },\n      {\n        \"day\": 6,\n        \"active\": true,\n        \"end_time\": \"22:15\",\n        \"start_time\": \"19:30\"\n      }\n    ],\n    \"geoname_id\": 1,\n    \"is_blocked\": false,\n    \"offer_hash\": \"<string>\",\n    \"offer_link\": \"http://host/offer/offerhash123\",\n    \"offer_type\": \"sell\",\n    \"updated_at\": 1455032576,\n    \"location_id\": 1,\n    \"offer_terms\": \"ad laborum velit\",\n    \"country_name\": \"aute proident enim Excepteur\",\n    \"release_time\": -88431924,\n    \"bank_accounts\": [\n      {\n        \"iban\": \"CR99000000000000888888\",\n        \"ifsc\": \"SBIN0005943\",\n        \"clabe\": \"032180000118359719\",\n        \"bank_name\": \"SunTrust\",\n        \"bank_uuid\": \"00000000-0000-0000-0000-000000000000\",\n        \"swift_code\": \"BC12345678\",\n        \"country_iso\": \"US\",\n        \"holder_name\": \"John Smith\",\n        \"is_personal\": true,\n        \"account_number\": \"AL47212110090000000235698741\",\n        \"routing_number\": \"012345678\",\n        \"additional_info\": \"Use BIC code 123456789\",\n        \"bank_account_uuid\": \"00000000-0000-0000-0000-000000000000\",\n        \"fiat_currency_code\": \"USD\",\n        \"international_details\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"iban\": \"CR99000000000000888888\",\n        \"ifsc\": \"SBIN0005943\",\n        \"clabe\": \"032180000118359719\",\n        \"bank_name\": \"SunTrust\",\n        \"bank_uuid\": \"00000000-0000-0000-0000-000000000000\",\n        \"swift_code\": \"BC12345678\",\n        \"country_iso\": \"US\",\n        \"holder_name\": \"John Smith\",\n        \"is_personal\": true,\n        \"account_number\": \"AL47212110090000000235698741\",\n        \"routing_number\": \"012345678\",\n        \"additional_info\": \"Use BIC code 123456789\",\n        \"bank_account_uuid\": \"00000000-0000-0000-0000-000000000000\",\n        \"fiat_currency_code\": \"USD\",\n        \"international_details\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"currency_code\": \"USD\",\n    \"fee_percentage\": -93377672.78214999,\n    \"is_fixed_price\": false,\n    \"payment_window\": 90,\n    \"crypto_currency\": \"BTC\",\n    \"subdivision_name\": \"qui ea officia cupidatat\",\n    \"predefined_amount\": \"qui eu sint\",\n    \"fiat_currency_code\": \"USD\",\n    \"fiat_price_per_btc\": 4426752.1007566005,\n    \"last_seen_timestamp\": 1455032576,\n    \"payment_method_name\": \"ApplePay\",\n    \"payment_method_slug\": \"applepay\",\n    \"release_time_median\": \"Duis amet\",\n    \"require_verified_id\": false,\n    \"crypto_currency_code\": \"BTC\",\n    \"offer_owner_username\": \"u\",\n    \"payment_method_group\": \"online-transfers\",\n    \"payment_method_label\": \"laborum Excepteur v\",\n    \"fiat_amount_range_max\": 100,\n    \"fiat_amount_range_min\": 10,\n    \"fiat_price_per_crypto\": 60640118.75002664,\n    \"bank_reference_message\": {\n      \"type\": \"exact_message\",\n      \"message\": \"exercitation cillum deserunt\"\n    },\n    \"block_anonymizer_users\": false,\n    \"fiat_USD_price_per_btc\": 35934413.72404426,\n    \"require_verified_email\": true,\n    \"require_verified_phone\": false,\n    \"show_only_trusted_user\": false,\n    \"country_limitation_list\": \"est nulla sed qui\",\n    \"country_limitation_type\": \"<string>\",\n    \"offer_owner_country_iso\": \"US\",\n    \"require_min_past_trades\": \"voluptate\",\n    \"new_buyer_max_fiat_limit\": -82296956.17627203,\n    \"offer_owner_profile_link\": \"http://host/user/user123\",\n    \"fiat_usd_price_per_crypto\": -34740268.79208667,\n    \"payment_method_country_name\": \"<string>\",\n    \"offer_owner_feedback_negative\": 1,\n    \"offer_owner_feedback_positive\": 10,\n    \"require_offer_currency_match_buyer_country\": true,\n    \"trade_details\": \"some string\"\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "808d2a9a-db66-496e-aebd-1e17496a8fc1",
                            "name": "Not found",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the offer.",
                                            "key": "offer_hash",
                                            "value": "laborum irure minim"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/get",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "get"
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1002,\n    \"message\": \"Offer not found\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "offer/list",
                    "id": "47644a6f-f55f-45d1-bf21-4e7e315c6496",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "active",
                                    "value": "false",
                                    "description": "A filter by active/not active offers, by default all offers are displayed."
                                },
                                {
                                    "key": "offer_type",
                                    "value": "sell",
                                    "description": "An offer type. Possible values: 'buy', 'sell'."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/offer/list",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "offer",
                                "list"
                            ]
                        },
                        "description": "Return all your offers."
                    },
                    "response": [
                        {
                            "id": "6689caad-a066-409a-8049-0e64ffc0b13c",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "A filter by active/not active offers, by default all offers are displayed.",
                                            "key": "active",
                                            "value": "false"
                                        },
                                        {
                                            "description": "An offer type. Possible values: 'buy', 'sell'.",
                                            "key": "offer_type",
                                            "value": "sell"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/list",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "list"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"count\": 1,\n    \"offers\": [\n      {\n        \"id\": \"<string>\",\n        \"tags\": [\n          {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"slug\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"slug\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"active\": false,\n        \"margin\": 5371636.259285405,\n        \"offer_id\": \"<string>\",\n        \"city_name\": \"esse\",\n        \"flow_type\": \"lite\",\n        \"last_seen\": \"seen-long-ago\",\n        \"created_at\": 1455032576,\n        \"crypto_max\": 6891679.525087029,\n        \"crypto_min\": -62204616.93410502,\n        \"duty_hours\": [\n          {\n            \"day\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end_time\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"start_time\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"day\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end_time\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"start_time\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"geoname_id\": 1,\n        \"is_blocked\": true,\n        \"offer_hash\": \"<string>\",\n        \"offer_link\": \"http://host/offer/offerhash123\",\n        \"offer_type\": \"sell\",\n        \"updated_at\": 1455032576,\n        \"location_id\": 1,\n        \"offer_terms\": \"fugiat a\",\n        \"country_name\": \"in\",\n        \"release_time\": -60616921,\n        \"bank_accounts\": [\n          {\n            \"iban\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ifsc\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"clabe\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"bank_name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"bank_uuid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"swift_code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country_iso\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"holder_name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_personal\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"account_number\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"routing_number\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"additional_info\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"bank_account_uuid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fiat_currency_code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"international_details\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"iban\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ifsc\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"clabe\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"bank_name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"bank_uuid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"swift_code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country_iso\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"holder_name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_personal\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"account_number\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"routing_number\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"additional_info\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"bank_account_uuid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fiat_currency_code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"international_details\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"currency_code\": \"USD\",\n        \"fee_percentage\": 93031985.87822172,\n        \"is_fixed_price\": false,\n        \"payment_window\": 90,\n        \"crypto_currency\": \"BTC\",\n        \"subdivision_name\": \"ut\",\n        \"predefined_amount\": \"nulla dolore\",\n        \"fiat_currency_code\": \"USD\",\n        \"fiat_price_per_btc\": 77112518.15126988,\n        \"last_seen_timestamp\": 1455032576,\n        \"payment_method_name\": \"ApplePay\",\n        \"payment_method_slug\": \"applepay\",\n        \"release_time_median\": \"sit\",\n        \"require_verified_id\": false,\n        \"crypto_currency_code\": \"BTC\",\n        \"offer_owner_username\": \"sunt et id pariatur\",\n        \"payment_method_group\": \"online-transfers\",\n        \"payment_method_label\": \"commodo in eu\",\n        \"fiat_amount_range_max\": 100,\n        \"fiat_amount_range_min\": 10,\n        \"fiat_price_per_crypto\": 70829186.31837466,\n        \"bank_reference_message\": {\n          \"type\": \"no_preference\",\n          \"message\": \"tempor est commodo\"\n        },\n        \"block_anonymizer_users\": false,\n        \"fiat_USD_price_per_btc\": 32583251.942453995,\n        \"require_verified_email\": true,\n        \"require_verified_phone\": false,\n        \"show_only_trusted_user\": false,\n        \"country_limitation_list\": \"ad exercitation elit\",\n        \"country_limitation_type\": \"<string>\",\n        \"offer_owner_country_iso\": \"US\",\n        \"require_min_past_trades\": \"dolore f\",\n        \"new_buyer_max_fiat_limit\": 40315583.535432965,\n        \"offer_owner_profile_link\": \"http://host/user/user123\",\n        \"fiat_usd_price_per_crypto\": 39259268.74572587,\n        \"payment_method_country_name\": \"<string>\",\n        \"offer_owner_feedback_negative\": 1,\n        \"offer_owner_feedback_positive\": 10,\n        \"require_offer_currency_match_buyer_country\": true\n      },\n      {\n        \"id\": \"<string>\",\n        \"tags\": [\n          {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"slug\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"slug\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"active\": false,\n        \"margin\": -26754444.289381847,\n        \"offer_id\": \"<string>\",\n        \"city_name\": \"anim\",\n        \"flow_type\": \"default\",\n        \"last_seen\": \"seen-long-ago\",\n        \"created_at\": 1455032576,\n        \"crypto_max\": -84943686.19256632,\n        \"crypto_min\": -10691393.838503018,\n        \"duty_hours\": [\n          {\n            \"day\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end_time\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"start_time\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"day\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end_time\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"start_time\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"geoname_id\": 1,\n        \"is_blocked\": false,\n        \"offer_hash\": \"<string>\",\n        \"offer_link\": \"http://host/offer/offerhash123\",\n        \"offer_type\": \"sell\",\n        \"updated_at\": 1455032576,\n        \"location_id\": 1,\n        \"offer_terms\": \"consequat ullamco elit qui in\",\n        \"country_name\": \"amet dolor Ut\",\n        \"release_time\": -68000196,\n        \"bank_accounts\": [\n          {\n            \"iban\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ifsc\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"clabe\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"bank_name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"bank_uuid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"swift_code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country_iso\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"holder_name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_personal\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"account_number\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"routing_number\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"additional_info\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"bank_account_uuid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fiat_currency_code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"international_details\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"iban\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ifsc\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"clabe\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"bank_name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"bank_uuid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"swift_code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country_iso\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"holder_name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_personal\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"account_number\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"routing_number\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"additional_info\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"bank_account_uuid\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fiat_currency_code\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"international_details\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"currency_code\": \"USD\",\n        \"fee_percentage\": 38984103.45712963,\n        \"is_fixed_price\": true,\n        \"payment_window\": 90,\n        \"crypto_currency\": \"BTC\",\n        \"subdivision_name\": \"aliquip non laboris\",\n        \"predefined_amount\": \"nostrud ex id ipsum\",\n        \"fiat_currency_code\": \"USD\",\n        \"fiat_price_per_btc\": 42948453.7743189,\n        \"last_seen_timestamp\": 1455032576,\n        \"payment_method_name\": \"ApplePay\",\n        \"payment_method_slug\": \"applepay\",\n        \"release_time_median\": \"reprehenderit\",\n        \"require_verified_id\": false,\n        \"crypto_currency_code\": \"BTC\",\n        \"offer_owner_username\": \"commodo voluptate sed\",\n        \"payment_method_group\": \"online-transfers\",\n        \"payment_method_label\": \"nostrud magna sit cillum\",\n        \"fiat_amount_range_max\": 100,\n        \"fiat_amount_range_min\": 10,\n        \"fiat_price_per_crypto\": -15289891.353528246,\n        \"bank_reference_message\": {\n          \"type\": \"no_message\",\n          \"message\": \"exercitation elit ullamco proident\"\n        },\n        \"block_anonymizer_users\": false,\n        \"fiat_USD_price_per_btc\": -67388322.45763025,\n        \"require_verified_email\": false,\n        \"require_verified_phone\": false,\n        \"show_only_trusted_user\": false,\n        \"country_limitation_list\": \"in\",\n        \"country_limitation_type\": \"<string>\",\n        \"offer_owner_country_iso\": \"US\",\n        \"require_min_past_trades\": \"sunt deserunt\",\n        \"new_buyer_max_fiat_limit\": -46420622.235136166,\n        \"offer_owner_profile_link\": \"http://host/user/user123\",\n        \"fiat_usd_price_per_crypto\": -84500367.47831713,\n        \"payment_method_country_name\": \"<string>\",\n        \"offer_owner_feedback_negative\": 1,\n        \"offer_owner_feedback_positive\": 10,\n        \"require_offer_currency_match_buyer_country\": false\n      }\n    ]\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "a154ac4e-72d9-46e7-bd39-cf953ee31ed6",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "A filter by active/not active offers, by default all offers are displayed.",
                                            "key": "active",
                                            "value": "false"
                                        },
                                        {
                                            "description": "An offer type. Possible values: 'buy', 'sell'.",
                                            "key": "offer_type",
                                            "value": "sell"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/list",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "list"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1001,\n    \"message\": \"Invalid type provided for Offer Type\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "offer/price",
                    "id": "8ebee29f-aa19-4a2b-92a7-9ffb1187d2f7",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "offer_hash",
                                    "value": "laborum irure minim",
                                    "description": "(Required) A hash (ID) of the offer."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/offer/price",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "offer",
                                "price"
                            ]
                        },
                        "description": "Return a price for an offer\n        (if offer happens to be in fiat currency other than USD, then it will be recalculated to it)."
                    },
                    "response": [
                        {
                            "id": "a7637951-420e-4456-a446-f021d37332d5",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the offer.",
                                            "key": "offer_hash",
                                            "value": "laborum irure minim"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/price",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "price"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"price\": 49156791.12730783,\n    \"currency\": \"USD\",\n    \"crypto_currency\": \"BTC\"\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "49c86c1f-ce2d-49d5-93eb-6e9653bc3871",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the offer.",
                                            "key": "offer_hash",
                                            "value": "laborum irure minim"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/price",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "price"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1003,\n    \"message\": \"The offer_hash field is required\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "73235048-372d-49c8-8da5-b01a7770c293",
                            "name": "Not found",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the offer.",
                                            "key": "offer_hash",
                                            "value": "laborum irure minim"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/price",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "price"
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1002,\n    \"message\": \"Offer not found\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "offer/create",
                    "id": "34c11ac0-d307-4fb1-901e-1d884906fc32",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "offer_type_field",
                                    "value": "buy",
                                    "description": "(Required) An offer type. Possible values: 'buy', 'sell'."
                                },
                                {
                                    "key": "currency",
                                    "value": "USD",
                                    "description": "(Required) 3 letter ISO code for fiat currency. 'USD' or any other. Case insensitive."
                                },
                                {
                                    "key": "payment_method",
                                    "value": "applepay",
                                    "description": "(Required) A slug of the payment method. To see a list of payment method slugs please refer to payment-method/list endpoint."
                                },
                                {
                                    "key": "margin",
                                    "value": "69803209.99755543",
                                    "description": "(Required) A percent that determines differences between market price and the price of the offer."
                                },
                                {
                                    "key": "range_min",
                                    "value": "24199327.872531563",
                                    "description": "(Required) A minimum value of the trade limit, i.e the smallest amount of fiat that a trade can be started with. (Minimum value for the field 1)."
                                },
                                {
                                    "key": "range_max",
                                    "value": "-66237603.15820353",
                                    "description": "(Required) A maximum value of the trade limit, i.e the largest amount of fiat that a trade can be started with. (Minimum value for the field 1)."
                                },
                                {
                                    "key": "payment_window",
                                    "value": "38655154.89320454",
                                    "description": "(Required) How much time the trade partner has to make the payment and click 'Paid' before the trade is automatically canceled. Integer between 30 to 43200."
                                },
                                {
                                    "key": "offer_terms",
                                    "value": "Some text",
                                    "description": "(Required) Terms of the offer for a trade partner. String up to 2500 characters."
                                },
                                {
                                    "key": "trade_details",
                                    "value": "Some text",
                                    "description": "(Required) Instructions for a trade partner. String up to 2500 characters."
                                },
                                {
                                    "key": "tags",
                                    "value": "online-payments,cash-only",
                                    "description": "Comma-separated list of tags. For a list of available tags please refer to offer-tag/list and use 'slug' parameter."
                                },
                                {
                                    "key": "flow_type",
                                    "value": "default",
                                    "description": "A flow type for offer."
                                },
                                {
                                    "key": "offer_cap[active]",
                                    "value": "false"
                                },
                                {
                                    "key": "offer_cap[amount]",
                                    "value": "-83328662.37365577"
                                },
                                {
                                    "key": "duty_hours[0][day]",
                                    "value": "2"
                                },
                                {
                                    "key": "duty_hours[0][active]",
                                    "value": "false"
                                },
                                {
                                    "key": "duty_hours[0][end_time]",
                                    "value": "22:15"
                                },
                                {
                                    "key": "duty_hours[0][start_time]",
                                    "value": "19:30"
                                },
                                {
                                    "key": "fixed_price",
                                    "value": "102198.31395104527",
                                    "description": "Should be used only if the offer is created as a fixed price offer. If this parameter is used then 'margin' should not be specified."
                                },
                                {
                                    "key": "location_id",
                                    "value": "83586767.69024917",
                                    "description": "Location id is needed to search for offers with specific payment methods,\ne.g. Cash in Person, Gold. If payment method is another - parameter will be ignored.\nYou can find location ids here: https://www.geonames.org/.\nFor better experience use locations ids of countries and cities."
                                },
                                {
                                    "key": "bank_accounts",
                                    "value": "00000000-0000-0000-0000-000000000000,11111111-1111-1111-1111-111111111111",
                                    "description": "Comma-separated list of bank account UUIDs."
                                },
                                {
                                    "key": "is_fixed_price",
                                    "value": "false",
                                    "description": "Fixes the price of your cryptocurrency, rather than using the market price. If this field is used, then you should also specify a value for 'fixed_price'."
                                },
                                {
                                    "key": "crypto_currency",
                                    "value": "BTC",
                                    "description": "A cryptocurrency that this offer will use, a code should be specified. For example - btc, eth. If not set, then 'btc' will be used as a default."
                                },
                                {
                                    "key": "payment_country",
                                    "value": "EST",
                                    "description": "3 letter ISO country code (e.g. USA, EST, fra, etc.). If the payment method is country-specific, specify the most relevant country associated with this payment method."
                                },
                                {
                                    "key": "predefined_amount",
                                    "value": "20,30,50",
                                    "description": "Comma-separated predefined amounts of fiat currency, i.e. 20,30,50. If not specified, then a user can enter any amount within the offer range."
                                },
                                {
                                    "key": "payment_method_group",
                                    "value": "online-transfers",
                                    "description": "A group of payment methods. For a list of available payment method groups please refer to payment-method-group/list endpoint."
                                },
                                {
                                    "key": "payment_method_label",
                                    "value": "ALFA-BANK",
                                    "description": "A bank name will appear after the payment method. Maximum 25 characters and only letters, numbers, and dash. You can write several bank names separated by space. For example: CBS SEB METROPOLITAN ALFA."
                                },
                                {
                                    "key": "bank_reference_message[type]",
                                    "value": "exact_message",
                                    "description": "Required for bank-transfer payment method with flow_type 'bt-auto'. Describes what reference message you expect a trade partner to provide."
                                },
                                {
                                    "key": "bank_reference_message[message]",
                                    "value": "incididunt ea labore dolor",
                                    "description": "Required for bank-transfer payment method with flow_type 'bt-auto'. Describes what reference message you expect a trade partner to provide."
                                },
                                {
                                    "key": "show_only_trusted_user",
                                    "value": "false",
                                    "description": "The offer will be shown only to users from the trusted list."
                                },
                                {
                                    "key": "country_limitation_list",
                                    "value": "",
                                    "description": "Comma-separated list of 'ISO Alpha-2' country codes."
                                },
                                {
                                    "key": "country_limitation_type",
                                    "value": "disallowed",
                                    "description": "Type of limitation countries. Valid values are 'allowed' or 'disallowed'. If 'allowed' is used then the offer will be visible ONLY for visitors from countries specified in the 'country_limitation_list'. If 'disallowed' is used then this offer will NOT be visible for visitors from countries specified in the 'country_limitation_list'."
                                },
                                {
                                    "key": "require_min_past_trades",
                                    "value": "10",
                                    "description": "The offer will be shown only to users with a given amount of past trades."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/offer/create",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "offer",
                                "create"
                            ]
                        },
                        "description": "Create an offer."
                    },
                    "response": [
                        {
                            "id": "4354f81c-90fe-469d-83d4-a2d6c641e3ab",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) An offer type. Possible values: 'buy', 'sell'.",
                                            "key": "offer_type_field",
                                            "value": "buy"
                                        },
                                        {
                                            "description": "(Required) 3 letter ISO code for fiat currency. 'USD' or any other. Case insensitive.",
                                            "key": "currency",
                                            "value": "USD"
                                        },
                                        {
                                            "description": "(Required) A slug of the payment method. To see a list of payment method slugs please refer to payment-method/list endpoint.",
                                            "key": "payment_method",
                                            "value": "applepay"
                                        },
                                        {
                                            "description": "(Required) A percent that determines differences between market price and the price of the offer.",
                                            "key": "margin",
                                            "value": "69803209.99755543"
                                        },
                                        {
                                            "description": "(Required) A minimum value of the trade limit, i.e the smallest amount of fiat that a trade can be started with. (Minimum value for the field 1).",
                                            "key": "range_min",
                                            "value": "24199327.872531563"
                                        },
                                        {
                                            "description": "(Required) A maximum value of the trade limit, i.e the largest amount of fiat that a trade can be started with. (Minimum value for the field 1).",
                                            "key": "range_max",
                                            "value": "-66237603.15820353"
                                        },
                                        {
                                            "description": "(Required) How much time the trade partner has to make the payment and click 'Paid' before the trade is automatically canceled. Integer between 30 to 43200.",
                                            "key": "payment_window",
                                            "value": "38655154.89320454"
                                        },
                                        {
                                            "description": "(Required) Terms of the offer for a trade partner. String up to 2500 characters.",
                                            "key": "offer_terms",
                                            "value": "Some text"
                                        },
                                        {
                                            "description": "(Required) Instructions for a trade partner. String up to 2500 characters.",
                                            "key": "trade_details",
                                            "value": "Some text"
                                        },
                                        {
                                            "description": "Comma-separated list of tags. For a list of available tags please refer to offer-tag/list and use 'slug' parameter.",
                                            "key": "tags",
                                            "value": "online-payments,cash-only"
                                        },
                                        {
                                            "description": "A flow type for offer.",
                                            "key": "flow_type",
                                            "value": "default"
                                        },
                                        {
                                            "key": "offer_cap[active]",
                                            "value": "false"
                                        },
                                        {
                                            "key": "offer_cap[amount]",
                                            "value": "-83328662.37365577"
                                        },
                                        {
                                            "key": "duty_hours[0][day]",
                                            "value": "2"
                                        },
                                        {
                                            "key": "duty_hours[0][active]",
                                            "value": "false"
                                        },
                                        {
                                            "key": "duty_hours[0][end_time]",
                                            "value": "22:15"
                                        },
                                        {
                                            "key": "duty_hours[0][start_time]",
                                            "value": "19:30"
                                        },
                                        {
                                            "description": "Should be used only if the offer is created as a fixed price offer. If this parameter is used then 'margin' should not be specified.",
                                            "key": "fixed_price",
                                            "value": "102198.31395104527"
                                        },
                                        {
                                            "description": "Location id is needed to search for offers with specific payment methods,\ne.g. Cash in Person, Gold. If payment method is another - parameter will be ignored.\nYou can find location ids here: https://www.geonames.org/.\nFor better experience use locations ids of countries and cities.",
                                            "key": "location_id",
                                            "value": "83586767.69024917"
                                        },
                                        {
                                            "description": "Comma-separated list of bank account UUIDs.",
                                            "key": "bank_accounts",
                                            "value": "00000000-0000-0000-0000-000000000000,11111111-1111-1111-1111-111111111111"
                                        },
                                        {
                                            "description": "Fixes the price of your cryptocurrency, rather than using the market price. If this field is used, then you should also specify a value for 'fixed_price'.",
                                            "key": "is_fixed_price",
                                            "value": "false"
                                        },
                                        {
                                            "description": "A cryptocurrency that this offer will use, a code should be specified. For example - btc, eth. If not set, then 'btc' will be used as a default.",
                                            "key": "crypto_currency",
                                            "value": "BTC"
                                        },
                                        {
                                            "description": "3 letter ISO country code (e.g. USA, EST, fra, etc.). If the payment method is country-specific, specify the most relevant country associated with this payment method.",
                                            "key": "payment_country",
                                            "value": "EST"
                                        },
                                        {
                                            "description": "Comma-separated predefined amounts of fiat currency, i.e. 20,30,50. If not specified, then a user can enter any amount within the offer range.",
                                            "key": "predefined_amount",
                                            "value": "20,30,50"
                                        },
                                        {
                                            "description": "A group of payment methods. For a list of available payment method groups please refer to payment-method-group/list endpoint.",
                                            "key": "payment_method_group",
                                            "value": "online-transfers"
                                        },
                                        {
                                            "description": "A bank name will appear after the payment method. Maximum 25 characters and only letters, numbers, and dash. You can write several bank names separated by space. For example: CBS SEB METROPOLITAN ALFA.",
                                            "key": "payment_method_label",
                                            "value": "ALFA-BANK"
                                        },
                                        {
                                            "description": "Required for bank-transfer payment method with flow_type 'bt-auto'. Describes what reference message you expect a trade partner to provide.",
                                            "key": "bank_reference_message[type]",
                                            "value": "exact_message"
                                        },
                                        {
                                            "description": "Required for bank-transfer payment method with flow_type 'bt-auto'. Describes what reference message you expect a trade partner to provide.",
                                            "key": "bank_reference_message[message]",
                                            "value": "incididunt ea labore dolor"
                                        },
                                        {
                                            "description": "The offer will be shown only to users from the trusted list.",
                                            "key": "show_only_trusted_user",
                                            "value": "false"
                                        },
                                        {
                                            "description": "Comma-separated list of 'ISO Alpha-2' country codes.",
                                            "key": "country_limitation_list",
                                            "value": ""
                                        },
                                        {
                                            "description": "Type of limitation countries. Valid values are 'allowed' or 'disallowed'. If 'allowed' is used then the offer will be visible ONLY for visitors from countries specified in the 'country_limitation_list'. If 'disallowed' is used then this offer will NOT be visible for visitors from countries specified in the 'country_limitation_list'.",
                                            "key": "country_limitation_type",
                                            "value": "disallowed"
                                        },
                                        {
                                            "description": "The offer will be shown only to users with a given amount of past trades.",
                                            "key": "require_min_past_trades",
                                            "value": "10"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/create",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "create"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"success\": true,\n    \"offer_hash\": \"<string>\"\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "46fa148b-7979-4c8d-a48f-938be27d8ece",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) An offer type. Possible values: 'buy', 'sell'.",
                                            "key": "offer_type_field",
                                            "value": "buy"
                                        },
                                        {
                                            "description": "(Required) 3 letter ISO code for fiat currency. 'USD' or any other. Case insensitive.",
                                            "key": "currency",
                                            "value": "USD"
                                        },
                                        {
                                            "description": "(Required) A slug of the payment method. To see a list of payment method slugs please refer to payment-method/list endpoint.",
                                            "key": "payment_method",
                                            "value": "applepay"
                                        },
                                        {
                                            "description": "(Required) A percent that determines differences between market price and the price of the offer.",
                                            "key": "margin",
                                            "value": "69803209.99755543"
                                        },
                                        {
                                            "description": "(Required) A minimum value of the trade limit, i.e the smallest amount of fiat that a trade can be started with. (Minimum value for the field 1).",
                                            "key": "range_min",
                                            "value": "24199327.872531563"
                                        },
                                        {
                                            "description": "(Required) A maximum value of the trade limit, i.e the largest amount of fiat that a trade can be started with. (Minimum value for the field 1).",
                                            "key": "range_max",
                                            "value": "-66237603.15820353"
                                        },
                                        {
                                            "description": "(Required) How much time the trade partner has to make the payment and click 'Paid' before the trade is automatically canceled. Integer between 30 to 43200.",
                                            "key": "payment_window",
                                            "value": "38655154.89320454"
                                        },
                                        {
                                            "description": "(Required) Terms of the offer for a trade partner. String up to 2500 characters.",
                                            "key": "offer_terms",
                                            "value": "Some text"
                                        },
                                        {
                                            "description": "(Required) Instructions for a trade partner. String up to 2500 characters.",
                                            "key": "trade_details",
                                            "value": "Some text"
                                        },
                                        {
                                            "description": "Comma-separated list of tags. For a list of available tags please refer to offer-tag/list and use 'slug' parameter.",
                                            "key": "tags",
                                            "value": "online-payments,cash-only"
                                        },
                                        {
                                            "description": "A flow type for offer.",
                                            "key": "flow_type",
                                            "value": "default"
                                        },
                                        {
                                            "key": "offer_cap[active]",
                                            "value": "false"
                                        },
                                        {
                                            "key": "offer_cap[amount]",
                                            "value": "-83328662.37365577"
                                        },
                                        {
                                            "key": "duty_hours[0][day]",
                                            "value": "2"
                                        },
                                        {
                                            "key": "duty_hours[0][active]",
                                            "value": "false"
                                        },
                                        {
                                            "key": "duty_hours[0][end_time]",
                                            "value": "22:15"
                                        },
                                        {
                                            "key": "duty_hours[0][start_time]",
                                            "value": "19:30"
                                        },
                                        {
                                            "description": "Should be used only if the offer is created as a fixed price offer. If this parameter is used then 'margin' should not be specified.",
                                            "key": "fixed_price",
                                            "value": "102198.31395104527"
                                        },
                                        {
                                            "description": "Location id is needed to search for offers with specific payment methods,\ne.g. Cash in Person, Gold. If payment method is another - parameter will be ignored.\nYou can find location ids here: https://www.geonames.org/.\nFor better experience use locations ids of countries and cities.",
                                            "key": "location_id",
                                            "value": "83586767.69024917"
                                        },
                                        {
                                            "description": "Comma-separated list of bank account UUIDs.",
                                            "key": "bank_accounts",
                                            "value": "00000000-0000-0000-0000-000000000000,11111111-1111-1111-1111-111111111111"
                                        },
                                        {
                                            "description": "Fixes the price of your cryptocurrency, rather than using the market price. If this field is used, then you should also specify a value for 'fixed_price'.",
                                            "key": "is_fixed_price",
                                            "value": "false"
                                        },
                                        {
                                            "description": "A cryptocurrency that this offer will use, a code should be specified. For example - btc, eth. If not set, then 'btc' will be used as a default.",
                                            "key": "crypto_currency",
                                            "value": "BTC"
                                        },
                                        {
                                            "description": "3 letter ISO country code (e.g. USA, EST, fra, etc.). If the payment method is country-specific, specify the most relevant country associated with this payment method.",
                                            "key": "payment_country",
                                            "value": "EST"
                                        },
                                        {
                                            "description": "Comma-separated predefined amounts of fiat currency, i.e. 20,30,50. If not specified, then a user can enter any amount within the offer range.",
                                            "key": "predefined_amount",
                                            "value": "20,30,50"
                                        },
                                        {
                                            "description": "A group of payment methods. For a list of available payment method groups please refer to payment-method-group/list endpoint.",
                                            "key": "payment_method_group",
                                            "value": "online-transfers"
                                        },
                                        {
                                            "description": "A bank name will appear after the payment method. Maximum 25 characters and only letters, numbers, and dash. You can write several bank names separated by space. For example: CBS SEB METROPOLITAN ALFA.",
                                            "key": "payment_method_label",
                                            "value": "ALFA-BANK"
                                        },
                                        {
                                            "description": "Required for bank-transfer payment method with flow_type 'bt-auto'. Describes what reference message you expect a trade partner to provide.",
                                            "key": "bank_reference_message[type]",
                                            "value": "exact_message"
                                        },
                                        {
                                            "description": "Required for bank-transfer payment method with flow_type 'bt-auto'. Describes what reference message you expect a trade partner to provide.",
                                            "key": "bank_reference_message[message]",
                                            "value": "incididunt ea labore dolor"
                                        },
                                        {
                                            "description": "The offer will be shown only to users from the trusted list.",
                                            "key": "show_only_trusted_user",
                                            "value": "false"
                                        },
                                        {
                                            "description": "Comma-separated list of 'ISO Alpha-2' country codes.",
                                            "key": "country_limitation_list",
                                            "value": ""
                                        },
                                        {
                                            "description": "Type of limitation countries. Valid values are 'allowed' or 'disallowed'. If 'allowed' is used then the offer will be visible ONLY for visitors from countries specified in the 'country_limitation_list'. If 'disallowed' is used then this offer will NOT be visible for visitors from countries specified in the 'country_limitation_list'.",
                                            "key": "country_limitation_type",
                                            "value": "disallowed"
                                        },
                                        {
                                            "description": "The offer will be shown only to users with a given amount of past trades.",
                                            "key": "require_min_past_trades",
                                            "value": "10"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/create",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "create"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1004,\n    \"message\": \"Error validating input data\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "offer/delete",
                    "id": "1e1aae9c-2148-4475-83e3-21b216c0c5d0",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "offer_hash",
                                    "value": "laborum irure minim",
                                    "description": "(Required) A hash (ID) of the offer."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/offer/delete",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "offer",
                                "delete"
                            ]
                        },
                        "description": "Delete an offer."
                    },
                    "response": [
                        {
                            "id": "87241786-8190-4715-b37f-0725ff47c52c",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the offer.",
                                            "key": "offer_hash",
                                            "value": "laborum irure minim"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/delete",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "delete"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"success\": true\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "3f50ef5a-b5f3-436d-8650-7a4d6fbef751",
                            "name": "Not found",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the offer.",
                                            "key": "offer_hash",
                                            "value": "laborum irure minim"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/delete",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "delete"
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1002,\n    \"message\": \"Offer not found\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "offer/prices",
                    "id": "bfca3146-8659-4b54-be1a-746852b0c62a",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "payment_method",
                                    "value": "exercitation anim veniam",
                                    "description": "(Required) A slug of the payment method. To see a list of payment method slugs please refer to payment-method/list endpoint."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/offer/prices",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "offer",
                                "prices"
                            ]
                        },
                        "description": "Return all prices for offers for a given payment method."
                    },
                    "response": [
                        {
                            "id": "4ffe2cbb-f4ec-4f79-b68e-ed46a4cdbd0d",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A slug of the payment method. To see a list of payment method slugs please refer to payment-method/list endpoint.",
                                            "key": "payment_method",
                                            "value": "exercitation anim veniam"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/prices",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "prices"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"count\": 1,\n    \"prices\": {\n      \"<offer-hash>\": {\n        \"price\": -56759705.13490225,\n        \"currency\": \"USD\",\n        \"offer_type\": \"sell\",\n        \"crypto_currency\": \"BTC\"\n      }\n    }\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "9bd7a44d-7c32-408f-a537-bbfb43f5070c",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A slug of the payment method. To see a list of payment method slugs please refer to payment-method/list endpoint.",
                                            "key": "payment_method",
                                            "value": "exercitation anim veniam"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/prices",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "prices"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1003,\n    \"message\": \"The payment_method field is required\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "offer/update",
                    "id": "920b262b-8bd6-4bfc-b2b0-73c3aa2f8d1e",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "offer_hash",
                                    "value": "<string>",
                                    "description": "(Required) A hash (ID) of the offer."
                                },
                                {
                                    "key": "tags",
                                    "value": "online-payments,cash-only",
                                    "description": "Comma-separated list of tags. For a list of available tags please refer to offer-tag/list and use 'slug' parameter."
                                },
                                {
                                    "key": "margin",
                                    "value": "46247842.924159676",
                                    "description": "A percent that determines differences between market price and the price of the offer."
                                },
                                {
                                    "key": "currency",
                                    "value": "USD",
                                    "description": "3 letter ISO code of fiat currency, e.g. USD. Case insensitive."
                                },
                                {
                                    "key": "flow_type",
                                    "value": "default",
                                    "description": "A flow type for offer."
                                },
                                {
                                    "key": "offer_cap[active]",
                                    "value": "false"
                                },
                                {
                                    "key": "offer_cap[amount]",
                                    "value": "-25425190.57636717"
                                },
                                {
                                    "key": "range_max",
                                    "value": "-1818371.3901018798",
                                    "description": "A maximum value of the trade limit, i.e the largest amount of fiat that a trade can be started with. (Minimum value for the field 1)."
                                },
                                {
                                    "key": "range_min",
                                    "value": "-27783242.165345088",
                                    "description": "A minimum value of the trade limit, i.e the smallest amount of fiat that a trade can be started with. (Minimum value for the field 1)."
                                },
                                {
                                    "key": "duty_hours[0][day]",
                                    "value": "6"
                                },
                                {
                                    "key": "duty_hours[0][active]",
                                    "value": "true"
                                },
                                {
                                    "key": "duty_hours[0][end_time]",
                                    "value": "22:15"
                                },
                                {
                                    "key": "duty_hours[0][start_time]",
                                    "value": "19:30"
                                },
                                {
                                    "key": "fixed_price",
                                    "value": "-17616334.287346363",
                                    "description": "Should be used only if the offer is created as a fixed price offer. If this parameter is used then 'margin' should not be specified."
                                },
                                {
                                    "key": "location_id",
                                    "value": "-69836537.46580507",
                                    "description": "Location id is needed to search for offers with specific payment methods,\ne.g. Cash in Person, Gold. If payment method is another - parameter will be ignored.\nYou can find location ids here: https://www.geonames.org/.\nFor better experience use locations ids of countries and cities."
                                },
                                {
                                    "key": "offer_terms",
                                    "value": "Some text",
                                    "description": "Terms of the offer for a trade partner. String up to 2500 characters."
                                },
                                {
                                    "key": "bank_accounts",
                                    "value": "00000000-0000-0000-0000-000000000000,11111111-1111-1111-1111-111111111111",
                                    "description": "Comma-separated list of bank account UUIDs."
                                },
                                {
                                    "key": "trade_details",
                                    "value": "Lorem sed Excepteur sit",
                                    "description": "Instructions for a trade partner. String up to 2500 characters."
                                },
                                {
                                    "key": "payment_method",
                                    "value": "applepay",
                                    "description": "A slug of the payment method. To see a list of payment method slugs please refer to payment-method/list endpoint."
                                },
                                {
                                    "key": "payment_window",
                                    "value": "30225727.17020759",
                                    "description": "How much time the trade partner has to make the payment and click 'Paid' before the trade is automatically canceled. Integer between 30 to 43200."
                                },
                                {
                                    "key": "payment_country",
                                    "value": "id commodo voluptate",
                                    "description": "3 letter ISO country code (e.g. USA, EST, fra, etc.). If the payment method is country-specific, specify the most relevant country associated with this payment method."
                                },
                                {
                                    "key": "predefined_amount",
                                    "value": "irure esse dolore proident",
                                    "description": "Comma-separated predefined amounts of fiat currency, i.e. 20,30,50. If not specified, then a user can enter any amount within the offer range."
                                },
                                {
                                    "key": "payment_method_group",
                                    "value": "cash-deposits",
                                    "description": "A group of payment methods. For a list of available payment method groups please refer to payment-method-group/list endpoint."
                                },
                                {
                                    "key": "payment_method_label",
                                    "value": "ALFA-BANK",
                                    "description": "A bank name will appear after the payment method. Maximum 25 characters and only letters, numbers, and dash. You can write several bank names separated by space, e.g. CBS SEB METROPOLITAN ALFA."
                                },
                                {
                                    "key": "bank_reference_message[type]",
                                    "value": "exact_message",
                                    "description": "Required for bank-transfer payment method with flow_type 'bt-auto'. Describes what reference message you expect a trade partner to provide."
                                },
                                {
                                    "key": "bank_reference_message[message]",
                                    "value": "enim sint",
                                    "description": "Required for bank-transfer payment method with flow_type 'bt-auto'. Describes what reference message you expect a trade partner to provide."
                                },
                                {
                                    "key": "show_only_trusted_user",
                                    "value": "true",
                                    "description": "The offer will be shown only to users from the trusted list."
                                },
                                {
                                    "key": "country_limitation_list",
                                    "value": "nostrud ipsum",
                                    "description": "Comma-separated list of 'ISO Alpha-2' country codes."
                                },
                                {
                                    "key": "country_limitation_type",
                                    "value": "commodo dolore",
                                    "description": "Type of limitation countries. Valid values are 'allowed' or 'disallowed'. If 'allowed' is used then the offer will be visible ONLY for visitors from countries specified in the 'country_limitation_list'. If 'disallowed' is used then this offer will NOT be visible for visitors from countries specified in the 'country_limitation_list'."
                                },
                                {
                                    "key": "require_min_past_trades",
                                    "value": "false",
                                    "description": "The offer will be shown only to users with a given amount of past trades."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/offer/update",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "offer",
                                "update"
                            ]
                        },
                        "description": "Update an offer."
                    },
                    "response": [
                        {
                            "id": "88908ad3-4222-4ed5-b5cb-b063750f6630",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the offer.",
                                            "key": "offer_hash",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Comma-separated list of tags. For a list of available tags please refer to offer-tag/list and use 'slug' parameter.",
                                            "key": "tags",
                                            "value": "online-payments,cash-only"
                                        },
                                        {
                                            "description": "A percent that determines differences between market price and the price of the offer.",
                                            "key": "margin",
                                            "value": "46247842.924159676"
                                        },
                                        {
                                            "description": "3 letter ISO code of fiat currency, e.g. USD. Case insensitive.",
                                            "key": "currency",
                                            "value": "USD"
                                        },
                                        {
                                            "description": "A flow type for offer.",
                                            "key": "flow_type",
                                            "value": "default"
                                        },
                                        {
                                            "key": "offer_cap[active]",
                                            "value": "false"
                                        },
                                        {
                                            "key": "offer_cap[amount]",
                                            "value": "-25425190.57636717"
                                        },
                                        {
                                            "description": "A maximum value of the trade limit, i.e the largest amount of fiat that a trade can be started with. (Minimum value for the field 1).",
                                            "key": "range_max",
                                            "value": "-1818371.3901018798"
                                        },
                                        {
                                            "description": "A minimum value of the trade limit, i.e the smallest amount of fiat that a trade can be started with. (Minimum value for the field 1).",
                                            "key": "range_min",
                                            "value": "-27783242.165345088"
                                        },
                                        {
                                            "key": "duty_hours[0][day]",
                                            "value": "6"
                                        },
                                        {
                                            "key": "duty_hours[0][active]",
                                            "value": "true"
                                        },
                                        {
                                            "key": "duty_hours[0][end_time]",
                                            "value": "22:15"
                                        },
                                        {
                                            "key": "duty_hours[0][start_time]",
                                            "value": "19:30"
                                        },
                                        {
                                            "description": "Should be used only if the offer is created as a fixed price offer. If this parameter is used then 'margin' should not be specified.",
                                            "key": "fixed_price",
                                            "value": "-17616334.287346363"
                                        },
                                        {
                                            "description": "Location id is needed to search for offers with specific payment methods,\ne.g. Cash in Person, Gold. If payment method is another - parameter will be ignored.\nYou can find location ids here: https://www.geonames.org/.\nFor better experience use locations ids of countries and cities.",
                                            "key": "location_id",
                                            "value": "-69836537.46580507"
                                        },
                                        {
                                            "description": "Terms of the offer for a trade partner. String up to 2500 characters.",
                                            "key": "offer_terms",
                                            "value": "Some text"
                                        },
                                        {
                                            "description": "Comma-separated list of bank account UUIDs.",
                                            "key": "bank_accounts",
                                            "value": "00000000-0000-0000-0000-000000000000,11111111-1111-1111-1111-111111111111"
                                        },
                                        {
                                            "description": "Instructions for a trade partner. String up to 2500 characters.",
                                            "key": "trade_details",
                                            "value": "Lorem sed Excepteur sit"
                                        },
                                        {
                                            "description": "A slug of the payment method. To see a list of payment method slugs please refer to payment-method/list endpoint.",
                                            "key": "payment_method",
                                            "value": "applepay"
                                        },
                                        {
                                            "description": "How much time the trade partner has to make the payment and click 'Paid' before the trade is automatically canceled. Integer between 30 to 43200.",
                                            "key": "payment_window",
                                            "value": "30225727.17020759"
                                        },
                                        {
                                            "description": "3 letter ISO country code (e.g. USA, EST, fra, etc.). If the payment method is country-specific, specify the most relevant country associated with this payment method.",
                                            "key": "payment_country",
                                            "value": "id commodo voluptate"
                                        },
                                        {
                                            "description": "Comma-separated predefined amounts of fiat currency, i.e. 20,30,50. If not specified, then a user can enter any amount within the offer range.",
                                            "key": "predefined_amount",
                                            "value": "irure esse dolore proident"
                                        },
                                        {
                                            "description": "A group of payment methods. For a list of available payment method groups please refer to payment-method-group/list endpoint.",
                                            "key": "payment_method_group",
                                            "value": "cash-deposits"
                                        },
                                        {
                                            "description": "A bank name will appear after the payment method. Maximum 25 characters and only letters, numbers, and dash. You can write several bank names separated by space, e.g. CBS SEB METROPOLITAN ALFA.",
                                            "key": "payment_method_label",
                                            "value": "ALFA-BANK"
                                        },
                                        {
                                            "description": "Required for bank-transfer payment method with flow_type 'bt-auto'. Describes what reference message you expect a trade partner to provide.",
                                            "key": "bank_reference_message[type]",
                                            "value": "exact_message"
                                        },
                                        {
                                            "description": "Required for bank-transfer payment method with flow_type 'bt-auto'. Describes what reference message you expect a trade partner to provide.",
                                            "key": "bank_reference_message[message]",
                                            "value": "enim sint"
                                        },
                                        {
                                            "description": "The offer will be shown only to users from the trusted list.",
                                            "key": "show_only_trusted_user",
                                            "value": "true"
                                        },
                                        {
                                            "description": "Comma-separated list of 'ISO Alpha-2' country codes.",
                                            "key": "country_limitation_list",
                                            "value": "nostrud ipsum"
                                        },
                                        {
                                            "description": "Type of limitation countries. Valid values are 'allowed' or 'disallowed'. If 'allowed' is used then the offer will be visible ONLY for visitors from countries specified in the 'country_limitation_list'. If 'disallowed' is used then this offer will NOT be visible for visitors from countries specified in the 'country_limitation_list'.",
                                            "key": "country_limitation_type",
                                            "value": "commodo dolore"
                                        },
                                        {
                                            "description": "The offer will be shown only to users with a given amount of past trades.",
                                            "key": "require_min_past_trades",
                                            "value": "false"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/update",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "update"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"success\": true\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "19eec7a9-4d6f-4196-a1be-2d15c70826f3",
                            "name": "Not found",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the offer.",
                                            "key": "offer_hash",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Comma-separated list of tags. For a list of available tags please refer to offer-tag/list and use 'slug' parameter.",
                                            "key": "tags",
                                            "value": "online-payments,cash-only"
                                        },
                                        {
                                            "description": "A percent that determines differences between market price and the price of the offer.",
                                            "key": "margin",
                                            "value": "46247842.924159676"
                                        },
                                        {
                                            "description": "3 letter ISO code of fiat currency, e.g. USD. Case insensitive.",
                                            "key": "currency",
                                            "value": "USD"
                                        },
                                        {
                                            "description": "A flow type for offer.",
                                            "key": "flow_type",
                                            "value": "default"
                                        },
                                        {
                                            "key": "offer_cap[active]",
                                            "value": "false"
                                        },
                                        {
                                            "key": "offer_cap[amount]",
                                            "value": "-25425190.57636717"
                                        },
                                        {
                                            "description": "A maximum value of the trade limit, i.e the largest amount of fiat that a trade can be started with. (Minimum value for the field 1).",
                                            "key": "range_max",
                                            "value": "-1818371.3901018798"
                                        },
                                        {
                                            "description": "A minimum value of the trade limit, i.e the smallest amount of fiat that a trade can be started with. (Minimum value for the field 1).",
                                            "key": "range_min",
                                            "value": "-27783242.165345088"
                                        },
                                        {
                                            "key": "duty_hours[0][day]",
                                            "value": "6"
                                        },
                                        {
                                            "key": "duty_hours[0][active]",
                                            "value": "true"
                                        },
                                        {
                                            "key": "duty_hours[0][end_time]",
                                            "value": "22:15"
                                        },
                                        {
                                            "key": "duty_hours[0][start_time]",
                                            "value": "19:30"
                                        },
                                        {
                                            "description": "Should be used only if the offer is created as a fixed price offer. If this parameter is used then 'margin' should not be specified.",
                                            "key": "fixed_price",
                                            "value": "-17616334.287346363"
                                        },
                                        {
                                            "description": "Location id is needed to search for offers with specific payment methods,\ne.g. Cash in Person, Gold. If payment method is another - parameter will be ignored.\nYou can find location ids here: https://www.geonames.org/.\nFor better experience use locations ids of countries and cities.",
                                            "key": "location_id",
                                            "value": "-69836537.46580507"
                                        },
                                        {
                                            "description": "Terms of the offer for a trade partner. String up to 2500 characters.",
                                            "key": "offer_terms",
                                            "value": "Some text"
                                        },
                                        {
                                            "description": "Comma-separated list of bank account UUIDs.",
                                            "key": "bank_accounts",
                                            "value": "00000000-0000-0000-0000-000000000000,11111111-1111-1111-1111-111111111111"
                                        },
                                        {
                                            "description": "Instructions for a trade partner. String up to 2500 characters.",
                                            "key": "trade_details",
                                            "value": "Lorem sed Excepteur sit"
                                        },
                                        {
                                            "description": "A slug of the payment method. To see a list of payment method slugs please refer to payment-method/list endpoint.",
                                            "key": "payment_method",
                                            "value": "applepay"
                                        },
                                        {
                                            "description": "How much time the trade partner has to make the payment and click 'Paid' before the trade is automatically canceled. Integer between 30 to 43200.",
                                            "key": "payment_window",
                                            "value": "30225727.17020759"
                                        },
                                        {
                                            "description": "3 letter ISO country code (e.g. USA, EST, fra, etc.). If the payment method is country-specific, specify the most relevant country associated with this payment method.",
                                            "key": "payment_country",
                                            "value": "id commodo voluptate"
                                        },
                                        {
                                            "description": "Comma-separated predefined amounts of fiat currency, i.e. 20,30,50. If not specified, then a user can enter any amount within the offer range.",
                                            "key": "predefined_amount",
                                            "value": "irure esse dolore proident"
                                        },
                                        {
                                            "description": "A group of payment methods. For a list of available payment method groups please refer to payment-method-group/list endpoint.",
                                            "key": "payment_method_group",
                                            "value": "cash-deposits"
                                        },
                                        {
                                            "description": "A bank name will appear after the payment method. Maximum 25 characters and only letters, numbers, and dash. You can write several bank names separated by space, e.g. CBS SEB METROPOLITAN ALFA.",
                                            "key": "payment_method_label",
                                            "value": "ALFA-BANK"
                                        },
                                        {
                                            "description": "Required for bank-transfer payment method with flow_type 'bt-auto'. Describes what reference message you expect a trade partner to provide.",
                                            "key": "bank_reference_message[type]",
                                            "value": "exact_message"
                                        },
                                        {
                                            "description": "Required for bank-transfer payment method with flow_type 'bt-auto'. Describes what reference message you expect a trade partner to provide.",
                                            "key": "bank_reference_message[message]",
                                            "value": "enim sint"
                                        },
                                        {
                                            "description": "The offer will be shown only to users from the trusted list.",
                                            "key": "show_only_trusted_user",
                                            "value": "true"
                                        },
                                        {
                                            "description": "Comma-separated list of 'ISO Alpha-2' country codes.",
                                            "key": "country_limitation_list",
                                            "value": "nostrud ipsum"
                                        },
                                        {
                                            "description": "Type of limitation countries. Valid values are 'allowed' or 'disallowed'. If 'allowed' is used then the offer will be visible ONLY for visitors from countries specified in the 'country_limitation_list'. If 'disallowed' is used then this offer will NOT be visible for visitors from countries specified in the 'country_limitation_list'.",
                                            "key": "country_limitation_type",
                                            "value": "commodo dolore"
                                        },
                                        {
                                            "description": "The offer will be shown only to users with a given amount of past trades.",
                                            "key": "require_min_past_trades",
                                            "value": "false"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/update",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "update"
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1002,\n    \"message\": \"Offer not found\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "offer/turn-on",
                    "id": "60bcd9b3-139f-4fe3-ae7a-e69d85da5b6c",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": []
                        },
                        "url": {
                            "raw": "{{baseUrl}}/offer/turn-on",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "offer",
                                "turn-on"
                            ]
                        },
                        "description": "Turn on all your offers."
                    },
                    "response": [
                        {
                            "id": "ebc35814-5752-4188-920b-6c2498934794",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": []
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/turn-on",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "turn-on"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"count\": 1\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "offer/activate",
                    "id": "0eca4ee1-1a6e-48e6-badb-dfb0dd290b2e",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "offer_hash",
                                    "value": "laborum irure minim",
                                    "description": "(Required) A hash (ID) of the offer."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/offer/activate",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "offer",
                                "activate"
                            ]
                        },
                        "description": "Activate an offer."
                    },
                    "response": [
                        {
                            "id": "4f239886-044d-44d1-b124-960673fac148",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the offer.",
                                            "key": "offer_hash",
                                            "value": "laborum irure minim"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/activate",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "activate"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"success\": true\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "09e0742c-dc7a-4b8f-9585-8e7c03e787f0",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the offer.",
                                            "key": "offer_hash",
                                            "value": "laborum irure minim"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/activate",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "activate"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1003,\n    \"message\": \"The offer_hash field is required\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "offer/turn-off",
                    "id": "48c4499b-69cd-482c-85f8-d75917fa6562",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": []
                        },
                        "url": {
                            "raw": "{{baseUrl}}/offer/turn-off",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "offer",
                                "turn-off"
                            ]
                        },
                        "description": "Turn off all your offers."
                    },
                    "response": [
                        {
                            "id": "42917b79-f06c-4dce-84b2-4f76559a8cd9",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": []
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/turn-off",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "turn-off"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"count\": 1\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "offer/deactivate",
                    "id": "8ea7d80f-2a61-4c32-bad4-299cd75acb44",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "offer_hash",
                                    "value": "laborum irure minim",
                                    "description": "(Required) A hash (ID) of the offer."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/offer/deactivate",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "offer",
                                "deactivate"
                            ]
                        },
                        "description": "Deactivate an offer."
                    },
                    "response": [
                        {
                            "id": "df2c9c7c-7df0-42cb-969e-b12f894908d8",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the offer.",
                                            "key": "offer_hash",
                                            "value": "laborum irure minim"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/deactivate",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "deactivate"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"success\": true\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "80870cb8-2dd2-4da6-b814-540f87615405",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the offer.",
                                            "key": "offer_hash",
                                            "value": "laborum irure minim"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/deactivate",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "deactivate"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1003,\n    \"message\": \"The offer_hash field is required\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "offer/update-price",
                    "id": "7fc6f066-56f4-4f89-9046-179f07fbfd1a",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "offer_hash",
                                    "value": "commodo mollit sunt",
                                    "description": "(Required) A hash (ID) of the offer."
                                },
                                {
                                    "key": "margin",
                                    "value": "42497762.348795295",
                                    "description": "A percent that determines differences between market price and the price of the offer."
                                },
                                {
                                    "key": "fixed_price",
                                    "value": "-39073462.25372188",
                                    "description": "Should be used only if the offer is created as a fixed price offer. If this parameter is used then 'margin' should not be specified."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/offer/update-price",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "offer",
                                "update-price"
                            ]
                        },
                        "description": "Updates an offer margin or fixed price value.\n        Which field to use depends on offer type if it is a fixed price or uses a margin."
                    },
                    "response": [
                        {
                            "id": "9db30524-acaa-484d-8357-6c9b647cf436",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the offer.",
                                            "key": "offer_hash",
                                            "value": "commodo mollit sunt"
                                        },
                                        {
                                            "description": "A percent that determines differences between market price and the price of the offer.",
                                            "key": "margin",
                                            "value": "42497762.348795295"
                                        },
                                        {
                                            "description": "Should be used only if the offer is created as a fixed price offer. If this parameter is used then 'margin' should not be specified.",
                                            "key": "fixed_price",
                                            "value": "-39073462.25372188"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/update-price",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "update-price"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"success\": true\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "242209f8-6d07-477c-97a4-dbefdcbaa4dd",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the offer.",
                                            "key": "offer_hash",
                                            "value": "commodo mollit sunt"
                                        },
                                        {
                                            "description": "A percent that determines differences between market price and the price of the offer.",
                                            "key": "margin",
                                            "value": "42497762.348795295"
                                        },
                                        {
                                            "description": "Should be used only if the offer is created as a fixed price offer. If this parameter is used then 'margin' should not be specified.",
                                            "key": "fixed_price",
                                            "value": "-39073462.25372188"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/offer/update-price",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "offer",
                                        "update-price"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1003,\n    \"message\": \"The offer_hash field is required\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                }
            ],
            "id": "4121d7eb-e17f-495a-beff-23ebdc53e726"
        },
        {
            "name": "trade",
            "item": [
                {
                    "name": "trade/get",
                    "id": "ddbcc14d-7d8f-4a28-a1bf-a49e9ad4473f",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "trade_hash",
                                    "value": "nisi tempor non irure incididunt",
                                    "description": "(Required) A hash (ID) of the trade."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/trade/get",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "trade",
                                "get"
                            ]
                        },
                        "description": "Fetch information for an active/completed trade."
                    },
                    "response": [
                        {
                            "id": "7a583e06-c7f6-4263-891c-4c43411b7e2e",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": "nisi tempor non irure incididunt"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/get",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "get"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"trade\": {\n      \"margin\": 5,\n      \"dispute\": {\n        \"reason\": \"Some dispite reason\",\n        \"reason_type\": \"buyer_payment_issue\"\n      },\n      \"paid_at\": \"2020-09-01 11:00:41\",\n      \"owner_ip\": \"10.0.0.1\",\n      \"reopened\": true,\n      \"flow_type\": 1,\n      \"source_id\": 1,\n      \"buyer_name\": \"nu\",\n      \"offer_hash\": \"<string>\",\n      \"offer_type\": \"sell\",\n      \"started_at\": \"2020-09-01 11:00:41\",\n      \"trade_hash\": \"<string>\",\n      \"offer_terms\": \"<string>\",\n      \"seller_name\": \"eiusmod fugiat\",\n      \"source_slug\": \"main\",\n      \"cancelled_at\": \"2020-09-01 11:00:41\",\n      \"completed_at\": \"2020-09-01 11:00:41\",\n      \"responder_ip\": \"134.56.7.890\",\n      \"trade_status\": \"Paid\",\n      \"bank_accounts\": {\n        \"to\": {\n          \"iban\": \"CR99000000000000888888\",\n          \"ifsc\": \"SBIN0005943\",\n          \"clabe\": \"032180000118359719\",\n          \"bank_name\": \"SunTrust\",\n          \"bank_uuid\": \"00000000-0000-0000-0000-000000000000\",\n          \"swift_code\": \"BC12345678\",\n          \"country_iso\": \"US\",\n          \"holder_name\": \"John Smith\",\n          \"is_personal\": true,\n          \"account_number\": \"AL47212110090000000235698741\",\n          \"routing_number\": \"012345678\",\n          \"additional_info\": \"Use BIC code 123456789\",\n          \"bank_account_uuid\": \"00000000-0000-0000-0000-000000000000\",\n          \"fiat_currency_code\": \"USD\",\n          \"international_details\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        }\n      },\n      \"trade_details\": \"<string>\",\n      \"fee_percentage\": 5,\n      \"flow_type_slug\": \"default\",\n      \"payment_window\": 90,\n      \"buyer_full_name\": {\n        \"last_name\": \"Smith\",\n        \"first_name\": \"John\"\n      },\n      \"instant_funding\": false,\n      \"dispute_ended_at\": \"2020-09-01 11:00:41\",\n      \"escrow_funded_at\": \"2020-09-01 11:00:41\",\n      \"seller_full_name\": {\n        \"last_name\": \"Smith\",\n        \"first_name\": \"John\"\n      },\n      \"buyer_external_id\": \"<uuid_string>\",\n      \"fee_crypto_amount\": 100,\n      \"total_attachments\": 10,\n      \"dispute_started_at\": \"2020-09-01 11:00:41\",\n      \"fiat_currency_code\": \"USD\",\n      \"fiat_price_per_btc\": 34242177.025479496,\n      \"funding_started_at\": \"2020-09-01 11:00:41\",\n      \"owner_responded_at\": \"2020-09-01 11:00:41\",\n      \"seller_external_id\": \"<uuid_string>\",\n      \"buyer_phone_carrier\": \"dolor fugiat\",\n      \"buyer_phone_country\": \"BLR\",\n      \"crypto_amount_total\": 100000,\n      \"payment_method_name\": \"Bank Transfer\",\n      \"payment_method_slug\": \"bank-transfer\",\n      \"buyer_fee_percentage\": -43986650.65732521,\n      \"crypto_currency_code\": \"BTC\",\n      \"external_description\": \"amet magna nulla sunt sed\",\n      \"funding_completed_at\": \"2020-09-01 11:00:41\",\n      \"seller_phone_carrier\": \"Velcom (Mobile)\",\n      \"seller_phone_country\": \"UKR\",\n      \"fiat_amount_requested\": -44775103.71865749,\n      \"fiat_price_per_crypto\": 57711446.71052909,\n      \"seller_fee_percentage\": 11086379.4095788,\n      \"buyer_fee_crypto_amount\": 100,\n      \"crypto_amount_requested\": 100000,\n      \"crypto_current_rate_usd\": 97167139.10790786,\n      \"external_crypto_address\": \"velit nostrud incididunt dolor\",\n      \"buyer_account_created_at\": \"2020-09-01 11:00:41\",\n      \"seller_fee_crypto_amount\": 100,\n      \"seller_account_created_at\": \"2020-09-01 11:00:41\"\n    },\n    \"supported_actions\": [\n      \"cancel\",\n      \"cancel\"\n    ]\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "abf84453-7bef-495b-a123-be2a406f05e8",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": "nisi tempor non irure incididunt"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/get",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "get"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1003,\n    \"message\": \"The trade_hash field is required\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "trade/fund",
                    "id": "42d061f7-127e-4502-bf99-5ce9431e1b75",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "trade_hash",
                                    "value": "nisi tempor non irure incididunt",
                                    "description": "(Required) A hash (ID) of the trade."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/trade/fund",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "trade",
                                "fund"
                            ]
                        },
                        "description": "Fund a deferred escrow trade."
                    },
                    "response": [
                        {
                            "id": "046a7462-d22f-46ce-ab77-6033e879a5ee",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": "nisi tempor non irure incididunt"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/fund",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "fund"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"success\": true\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "e73cdc73-726b-4a54-975d-1d8f1230d344",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": "nisi tempor non irure incididunt"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/fund",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "fund"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1003,\n    \"message\": \"The trade_hash field is required\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "trade/list",
                    "id": "2983b864-871e-43b5-8692-8200d7f5a6ee",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": []
                        },
                        "url": {
                            "raw": "{{baseUrl}}/trade/list",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "trade",
                                "list"
                            ]
                        },
                        "description": "List all your currently active trades."
                    },
                    "response": [
                        {
                            "id": "f3d6c9da-a4b1-4eae-bfba-dc5074d6bfa1",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": []
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/list",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "list"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"count\": 1,\n    \"trades\": [\n      {\n        \"offer_hash\": \"<string>\",\n        \"offer_type\": \"sell\",\n        \"started_at\": \"2020-09-01 11:00:41\",\n        \"trade_hash\": \"<string>\",\n        \"total_attachments\": 1,\n        \"fiat_currency_code\": \"USD\",\n        \"crypto_currency_code\": \"BTC\"\n      },\n      {\n        \"offer_hash\": \"<string>\",\n        \"offer_type\": \"buy\",\n        \"started_at\": \"2020-09-01 11:00:41\",\n        \"trade_hash\": \"<string>\",\n        \"total_attachments\": 1,\n        \"fiat_currency_code\": \"USD\",\n        \"crypto_currency_code\": \"BTC\"\n      }\n    ]\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "trade/paid",
                    "id": "8d84f125-9ea4-49f8-a2b3-82de5a3c0bfa",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "trade_hash",
                                    "value": "nisi tempor non irure incididunt",
                                    "description": "(Required) A hash (ID) of the trade."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/trade/paid",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "trade",
                                "paid"
                            ]
                        },
                        "description": "Mark trade as PAID."
                    },
                    "response": [
                        {
                            "id": "1d04f179-eded-4adc-823b-8cdb68b59772",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": "nisi tempor non irure incididunt"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/paid",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "paid"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"success\": true\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "cca800a8-778f-41c2-a630-837119359e48",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": "nisi tempor non irure incididunt"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/paid",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "paid"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1003,\n    \"message\": \"The trade_hash field is required\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "trade/start",
                    "id": "5eca4f5c-8a78-484e-9546-d757812fee62",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "offer_hash",
                                    "value": "sit Lorem exercitation ",
                                    "description": "(Required) A hash (ID) of an offer."
                                },
                                {
                                    "key": "fiat",
                                    "value": "-97296717.2957111",
                                    "description": "Trade amount in fiat currency."
                                },
                                {
                                    "key": "satoshi",
                                    "value": "-90682040",
                                    "description": "Deprecated. Please use crypto_amount instead."
                                },
                                {
                                    "key": "bank_accounts[to]",
                                    "value": "voluptate ullamco deserunt",
                                    "description": "Bank accounts that will be used for a given trade."
                                },
                                {
                                    "key": "crypto_amount",
                                    "value": "-54162806",
                                    "description": "Trade amount in cryptocurrency. For BTC trade in Satoshi, for ETH trade in GWEI, for USDT trade in micro cents (e.g 1 usdt = 1000000 micro cents)."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/trade/start",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "trade",
                                "start"
                            ]
                        },
                        "description": "Start a trade."
                    },
                    "response": [
                        {
                            "id": "ef5f50c5-6511-4f52-b638-bbe67da919f0",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of an offer.",
                                            "key": "offer_hash",
                                            "value": "sit Lorem exercitation "
                                        },
                                        {
                                            "description": "Trade amount in fiat currency.",
                                            "key": "fiat",
                                            "value": "-97296717.2957111"
                                        },
                                        {
                                            "description": "Deprecated. Please use crypto_amount instead.",
                                            "key": "satoshi",
                                            "value": "-90682040"
                                        },
                                        {
                                            "description": "Bank accounts that will be used for a given trade.",
                                            "key": "bank_accounts[to]",
                                            "value": "voluptate ullamco deserunt"
                                        },
                                        {
                                            "description": "Trade amount in cryptocurrency. For BTC trade in Satoshi, for ETH trade in GWEI, for USDT trade in micro cents (e.g 1 usdt = 1000000 micro cents).",
                                            "key": "crypto_amount",
                                            "value": "-54162806"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/start",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "start"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"success\": true,\n    \"trade_hash\": \"<string>\"\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "f525e2d4-dc64-48f2-9e46-c33a58a974a1",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of an offer.",
                                            "key": "offer_hash",
                                            "value": "sit Lorem exercitation "
                                        },
                                        {
                                            "description": "Trade amount in fiat currency.",
                                            "key": "fiat",
                                            "value": "-97296717.2957111"
                                        },
                                        {
                                            "description": "Deprecated. Please use crypto_amount instead.",
                                            "key": "satoshi",
                                            "value": "-90682040"
                                        },
                                        {
                                            "description": "Bank accounts that will be used for a given trade.",
                                            "key": "bank_accounts[to]",
                                            "value": "voluptate ullamco deserunt"
                                        },
                                        {
                                            "description": "Trade amount in cryptocurrency. For BTC trade in Satoshi, for ETH trade in GWEI, for USDT trade in micro cents (e.g 1 usdt = 1000000 micro cents).",
                                            "key": "crypto_amount",
                                            "value": "-54162806"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/start",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "start"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1002,\n    \"message\": \"Offer not found\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "trade/cancel",
                    "id": "3b519bba-1fc7-4027-ba6b-30a834f9bb56",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "trade_hash",
                                    "value": "nisi tempor non irure incididunt",
                                    "description": "(Required) A hash (ID) of the trade."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/trade/cancel",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "trade",
                                "cancel"
                            ]
                        },
                        "description": "Cancel a trade."
                    },
                    "response": [
                        {
                            "id": "0df1a036-5673-45ee-9138-1fd827be1417",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": "nisi tempor non irure incididunt"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/cancel",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "cancel"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"success\": true\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "58c43206-785d-457e-863d-2e59e0397783",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": "nisi tempor non irure incididunt"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/cancel",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "cancel"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1003,\n    \"message\": \"The trade_hash field is required\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "trade/reopen",
                    "id": "68a71b3d-7713-49f8-8331-e46b9c23ded5",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "trade_hash",
                                    "value": "nisi tempor non irure incididunt",
                                    "description": "(Required) A hash (ID) of the trade."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/trade/reopen",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "trade",
                                "reopen"
                            ]
                        },
                        "description": "Reopen trade."
                    },
                    "response": [
                        {
                            "id": "0840d902-42a9-4a94-a540-ddd1f17c1d80",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": "nisi tempor non irure incididunt"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/reopen",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "reopen"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"success\": true\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "7db670a6-7b44-4c67-9556-af14bc81bd52",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": "nisi tempor non irure incididunt"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/reopen",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "reopen"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1003,\n    \"message\": \"The trade_hash field is required\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "trade/dispute",
                    "id": "364019f4-ff22-49df-8965-34f7c7a8906d",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "trade_hash",
                                    "value": "",
                                    "description": "(Required) A hash (ID) of the trade."
                                },
                                {
                                    "key": "reason",
                                    "value": "incididunt labore consequat Ut quis",
                                    "description": "(Required) Description of the dispute reason, max length 250 characters."
                                },
                                {
                                    "key": "reason_type",
                                    "value": "vendor_payment_issue",
                                    "description": "Type of reason, for available reasons refer to trade/dispute-reasons endpoint."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/trade/dispute",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "trade",
                                "dispute"
                            ]
                        },
                        "description": "Open a dispute."
                    },
                    "response": [
                        {
                            "id": "a9048f14-bedc-4c9c-b900-fbca8489d9ba",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": ""
                                        },
                                        {
                                            "description": "(Required) Description of the dispute reason, max length 250 characters.",
                                            "key": "reason",
                                            "value": "incididunt labore consequat Ut quis"
                                        },
                                        {
                                            "description": "Type of reason, for available reasons refer to trade/dispute-reasons endpoint.",
                                            "key": "reason_type",
                                            "value": "vendor_payment_issue"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/dispute",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "dispute"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"success\": true\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "cc64e6c7-2eb1-434e-accb-050333fac0b0",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": ""
                                        },
                                        {
                                            "description": "(Required) Description of the dispute reason, max length 250 characters.",
                                            "key": "reason",
                                            "value": "incididunt labore consequat Ut quis"
                                        },
                                        {
                                            "description": "Type of reason, for available reasons refer to trade/dispute-reasons endpoint.",
                                            "key": "reason_type",
                                            "value": "vendor_payment_issue"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/dispute",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "dispute"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1003,\n    \"message\": \"The trade_hash field is required\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "trade/release",
                    "id": "9a2eb43b-3fc6-4165-b4c3-014f07578885",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "description": "If the endpoint is invoked with an access key which has been received using Sign in with\n    Paxful authorization flow and it happens that a user has 2FA enabled then you need to provide a code that you have\n    received from a user using this header.\n    The flow may look like this: you invoke trade/release endpoint, if you receive 1006 response code, that means user\n    has 2FA enabled, in this case in your application you prompt a user to provide you with a code.\n    Once you have received it, you issue trade/release once again and provide the code in this header.",
                                "key": "x-paxful-2fa",
                                "value": "cillum velit labore anim"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "trade_hash",
                                    "value": "nisi tempor non irure incididunt",
                                    "description": "(Required) A hash (ID) of the trade."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/trade/release",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "trade",
                                "release"
                            ]
                        },
                        "description": "Release crypto for a trade."
                    },
                    "response": [
                        {
                            "id": "8ee7fa14-e56a-4128-9730-ec9f8bb96f3a",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "If the endpoint is invoked with an access key which has been received using Sign in with\n    Paxful authorization flow and it happens that a user has 2FA enabled then you need to provide a code that you have\n    received from a user using this header.\n    The flow may look like this: you invoke trade/release endpoint, if you receive 1006 response code, that means user\n    has 2FA enabled, in this case in your application you prompt a user to provide you with a code.\n    Once you have received it, you issue trade/release once again and provide the code in this header.",
                                        "key": "x-paxful-2fa",
                                        "value": "cillum velit labore anim"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": "nisi tempor non irure incididunt"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/release",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "release"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"success\": true\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "d6a8a81e-2fb6-43da-82ae-b197167b6d2a",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    },
                                    {
                                        "description": "If the endpoint is invoked with an access key which has been received using Sign in with\n    Paxful authorization flow and it happens that a user has 2FA enabled then you need to provide a code that you have\n    received from a user using this header.\n    The flow may look like this: you invoke trade/release endpoint, if you receive 1006 response code, that means user\n    has 2FA enabled, in this case in your application you prompt a user to provide you with a code.\n    Once you have received it, you issue trade/release once again and provide the code in this header.",
                                        "key": "x-paxful-2fa",
                                        "value": "cillum velit labore anim"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": "nisi tempor non irure incididunt"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/release",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "release"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1003,\n    \"message\": \"The trade_hash field is required\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "trade/add-proof",
                    "id": "50ef4720-1ca1-4419-8fbc-5d01f96427be",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "trade_hash",
                                    "value": "culpa consequat ex",
                                    "description": "(Required) A hash (ID) of the trade."
                                },
                                {
                                    "key": "files[0][url]",
                                    "value": "fugiat amet",
                                    "description": "(Required) Url and mimetype for the attached file as proof. Array of objects."
                                },
                                {
                                    "key": "files[0][mimetype]",
                                    "value": "do amet velit aute",
                                    "description": "(Required) Url and mimetype for the attached file as proof. Array of objects."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/trade/add-proof",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "trade",
                                "add-proof"
                            ]
                        },
                        "description": "Add proof of payments to trade. Method is to be used only for trades with 'Bank Transfer' payment method."
                    },
                    "response": [
                        {
                            "id": "0c730766-8832-431f-bfe5-610b5b55cb84",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": "culpa consequat ex"
                                        },
                                        {
                                            "description": "(Required) Url and mimetype for the attached file as proof. Array of objects.",
                                            "key": "files[0][url]",
                                            "value": "fugiat amet"
                                        },
                                        {
                                            "description": "(Required) Url and mimetype for the attached file as proof. Array of objects.",
                                            "key": "files[0][mimetype]",
                                            "value": "do amet velit aute"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/add-proof",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "add-proof"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"success\": true\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "bde97026-8d3c-4ce5-8c24-d9db40db60f7",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": "culpa consequat ex"
                                        },
                                        {
                                            "description": "(Required) Url and mimetype for the attached file as proof. Array of objects.",
                                            "key": "files[0][url]",
                                            "value": "fugiat amet"
                                        },
                                        {
                                            "description": "(Required) Url and mimetype for the attached file as proof. Array of objects.",
                                            "key": "files[0][mimetype]",
                                            "value": "do amet velit aute"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/add-proof",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "add-proof"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1003,\n    \"message\": \"The trade_hash field is required\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "trade/completed",
                    "id": "127699e9-84e6-487e-8bab-b52c8885b418",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "page",
                                    "value": "1",
                                    "description": "Requested page, by default is 1."
                                },
                                {
                                    "key": "partner",
                                    "value": "ex",
                                    "description": "Username of a partner."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/trade/completed",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "trade",
                                "completed"
                            ]
                        },
                        "description": "Fetch a list of your completed trades, optionally limited by partner username."
                    },
                    "response": [
                        {
                            "id": "104a8c22-b6b2-4552-97f3-c4135dcc896b",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "Requested page, by default is 1.",
                                            "key": "page",
                                            "value": "1"
                                        },
                                        {
                                            "description": "Username of a partner.",
                                            "key": "partner",
                                            "value": "ex"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/completed",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "completed"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"page\": 1,\n    \"count\": 1,\n    \"trades\": [\n      {\n        \"buyer\": \"<string>\",\n        \"seller\": \"<string>\",\n        \"status\": \"cancelled\",\n        \"ended_at\": \"2020-09-01 11:00:41\",\n        \"offer_hash\": \"<string>\",\n        \"offer_type\": \"buy\",\n        \"started_at\": \"2020-09-01 11:00:41\",\n        \"trade_hash\": \"<string>\",\n        \"completed_at\": \"2020-09-01 11:00:41\",\n        \"fiat_currency_code\": \"USD\",\n        \"payment_method_name\": \"WebMoney\",\n        \"crypto_currency_code\": \"BTC\",\n        \"fiat_amount_requested\": 69115641.94131872,\n        \"crypto_amount_requested\": 100000\n      },\n      {\n        \"buyer\": \"<string>\",\n        \"seller\": \"<string>\",\n        \"status\": \"cancelled\",\n        \"ended_at\": \"2020-09-01 11:00:41\",\n        \"offer_hash\": \"<string>\",\n        \"offer_type\": \"buy\",\n        \"started_at\": \"2020-09-01 11:00:41\",\n        \"trade_hash\": \"<string>\",\n        \"completed_at\": \"2020-09-01 11:00:41\",\n        \"fiat_currency_code\": \"USD\",\n        \"payment_method_name\": \"WebMoney\",\n        \"crypto_currency_code\": \"BTC\",\n        \"fiat_amount_requested\": 99087946.50422844,\n        \"crypto_amount_requested\": 100000\n      }\n    ]\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "b622c6e9-3d50-4782-b20a-7b4d5012a551",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "Requested page, by default is 1.",
                                            "key": "page",
                                            "value": "1"
                                        },
                                        {
                                            "description": "Username of a partner.",
                                            "key": "partner",
                                            "value": "ex"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/completed",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "completed"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1011,\n    \"message\": \"Target user not found\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "trade/locations",
                    "id": "649bf5fd-2219-49ed-a304-3331db2f9f3e",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "trade_hash",
                                    "value": "nisi tempor non irure incididunt",
                                    "description": "(Required) A hash (ID) of the trade."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/trade/locations",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "trade",
                                "locations"
                            ]
                        },
                        "description": "Fetch information for seller and buyer locations in a trade.\n    Restricted: User requesting the information must be a trade partner."
                    },
                    "response": [
                        {
                            "id": "6427fc22-6443-447e-92a7-e4b622d747b9",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": "nisi tempor non irure incididunt"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/locations",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "locations"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"buyer\": {\n      \"ip_location\": {\n        \"iso\": \"USA\",\n        \"name\": \"USA\",\n        \"localized_name\": \"USA\"\n      },\n      \"detected_location\": {\n        \"iso\": \"USA\",\n        \"name\": \"USA\",\n        \"localized_name\": \"USA\"\n      }\n    },\n    \"seller\": {\n      \"ip_location\": {\n        \"iso\": \"USA\",\n        \"name\": \"USA\",\n        \"localized_name\": \"USA\"\n      },\n      \"detected_location\": {\n        \"iso\": \"USA\",\n        \"name\": \"USA\",\n        \"localized_name\": \"USA\"\n      }\n    }\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "fafdd591-8025-4d33-b7ff-d9e958ec87d9",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": "nisi tempor non irure incididunt"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/locations",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "locations"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1003,\n    \"message\": \"The trade_hash field is required\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "trade/dispute-reasons",
                    "id": "1312aa4e-0610-4537-b381-91754fd862a5",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "trade_hash",
                                    "value": "nisi tempor non irure incididunt",
                                    "description": "(Required) A hash (ID) of the trade."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/trade/dispute-reasons",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "trade",
                                "dispute-reasons"
                            ]
                        },
                        "description": "Fetch a list of available dispute reasons."
                    },
                    "response": [
                        {
                            "id": "044d9cc7-05d2-4e80-8604-9d7f7ed35412",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": "nisi tempor non irure incididunt"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/dispute-reasons",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "dispute-reasons"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"count\": 1,\n    \"reasons\": [\n      {\n        \"name\": \"Some text\",\n        \"description\": \"Some text\",\n        \"reason_type\": \"buyer_payment_issue\",\n        \"name_localized\": \"Some text\"\n      },\n      {\n        \"name\": \"Some text\",\n        \"description\": \"Some text\",\n        \"reason_type\": \"buyer_payment_issue\",\n        \"name_localized\": \"Some text\"\n      }\n    ]\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "trade/share-linked-bank-account",
                    "id": "3cb4bfcf-bbf3-4181-8e2f-913bee1a27e7",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "trade_hash",
                                    "value": "incididunt in ipsum Lorem",
                                    "description": "Hash ID of a trade."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/trade/share-linked-bank-account",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "trade",
                                "share-linked-bank-account"
                            ]
                        },
                        "description": "Share seller bank account linked to bank transfer trade."
                    },
                    "response": [
                        {
                            "id": "ec04d80b-87dd-474a-9546-6842e4de1bd9",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "Hash ID of a trade.",
                                            "key": "trade_hash",
                                            "value": "incididunt in ipsum Lorem"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/share-linked-bank-account",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "share-linked-bank-account"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{}"
                        },
                        {
                            "id": "25f2351e-78cc-4efa-a45e-bd9941c0cd83",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "Hash ID of a trade.",
                                            "key": "trade_hash",
                                            "value": "incididunt in ipsum Lorem"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade/share-linked-bank-account",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade",
                                        "share-linked-bank-account"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 400,\n    \"message\": \"Trade not found\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                }
            ],
            "id": "df7fbbaf-3584-4ec9-b683-790c17c022d3"
        },
        {
            "name": "currency",
            "item": [
                {
                    "name": "currency/btc",
                    "id": "9d688c3f-ef34-4ffc-86ed-3dd0547d341d",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": []
                        },
                        "url": {
                            "raw": "{{baseUrl}}/currency/btc?response=text",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "currency",
                                "btc"
                            ],
                            "query": [
                                {
                                    "key": "response",
                                    "value": "text"
                                }
                            ]
                        },
                        "description": "Return bitcoin price in US Dollars. The given price is used as indicative price of bitcoin on\n     the marketplace. Bitcoin price is being updated every 3 minutes. Authentication is optional."
                    },
                    "response": [
                        {
                            "id": "a09a648b-70ea-4fde-9017-01b5e8ff8356",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": []
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/currency/btc?response=text",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "currency",
                                        "btc"
                                    ],
                                    "query": [
                                        {
                                            "key": "response",
                                            "value": "text"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"price\": 3513866.606393948,\n  \"currency\": \"USD\"\n}"
                        }
                    ]
                },
                {
                    "name": "currency/list",
                    "id": "d7a244c7-85a5-448c-a7f1-d7f3c76a6fd2",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "locale",
                                    "value": "en",
                                    "description": "Locale code, e.g. ru, pt_BR."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/currency/list",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "currency",
                                "list"
                            ]
                        },
                        "description": "Fetch all marketplace supported fiat currencies and their corresponding rates in crypto and USD.\n     Authentication is optional."
                    },
                    "response": [
                        {
                            "id": "19df3814-576d-4168-978c-0d0266d6c876",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "Locale code, e.g. ru, pt_BR.",
                                            "key": "locale",
                                            "value": "en"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/currency/list",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "currency",
                                        "list"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"count\": 10,\n    \"currencies\": [\n      {\n        \"code\": \"USD\",\n        \"name\": \"US Dollar\",\n        \"rate\": {\n          \"btc\": 40000,\n          \"eth\": 3000,\n          \"usd\": 1,\n          \"usdt\": 1\n        },\n        \"name_localized\": \"United Arab Emirates Dirham\",\n        \"min_trade_amount_usd\": 66242777.533064276\n      },\n      {\n        \"code\": \"USD\",\n        \"name\": \"US Dollar\",\n        \"rate\": {\n          \"btc\": 40000,\n          \"eth\": 3000,\n          \"usd\": 1,\n          \"usdt\": 1\n        },\n        \"name_localized\": \"United Arab Emirates Dirham\",\n        \"min_trade_amount_usd\": 35531881.51173553\n      }\n    ]\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "currency/rates",
                    "id": "a25d70ec-7818-41e3-bc9a-6cf503a91d14",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": []
                        },
                        "url": {
                            "raw": "{{baseUrl}}/currency/rates",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "currency",
                                "rates"
                            ]
                        },
                        "description": "Fetch all marketplace supported fiat currencies and their rates in USD and BTC.\n     Authentication is optional. Deprecated, use currency/list instead."
                    },
                    "response": [
                        {
                            "id": "70392840-dbad-4d3e-8e82-c7d13e73efe0",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": []
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/currency/rates",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "currency",
                                        "rates"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": [\n    {\n      \"code\": \"AED\",\n      \"name\": \"United Arab Emirates Dirham\",\n      \"rate_BTC\": 67207790.28387347,\n      \"rate_USD\": 5.6789,\n      \"min_trade_amount_usd\": 27829831.26004015\n    },\n    {\n      \"code\": \"AED\",\n      \"name\": \"United Arab Emirates Dirham\",\n      \"rate_BTC\": 19310763.492443874,\n      \"rate_USD\": 5.6789,\n      \"min_trade_amount_usd\": 82000674.95480007\n    }\n  ],\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "currency/list-auth",
                    "id": "caff59d4-63e6-4198-adec-1927b30bda4d",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "locale",
                                    "value": "en",
                                    "description": "Locale code, e.g. ru, pt_BR."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/currency/list-auth",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "currency",
                                "list-auth"
                            ]
                        },
                        "description": "Fetch all marketplace supported fiat currencies and their corresponding rates in crypto and USD.\n    Authentication is required."
                    },
                    "response": [
                        {
                            "id": "acbc0d11-2d28-4b3f-aef7-29b792c7466d",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "Locale code, e.g. ru, pt_BR.",
                                            "key": "locale",
                                            "value": "en"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/currency/list-auth",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "currency",
                                        "list-auth"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"count\": 10,\n    \"currencies\": [\n      {\n        \"code\": \"USD\",\n        \"name\": \"US Dollar\",\n        \"rate\": {\n          \"btc\": 40000,\n          \"eth\": 3000,\n          \"usd\": 1,\n          \"usdt\": 1\n        },\n        \"name_localized\": \"United Arab Emirates Dirham\",\n        \"min_trade_amount_usd\": -60609664.23938279\n      },\n      {\n        \"code\": \"USD\",\n        \"name\": \"US Dollar\",\n        \"rate\": {\n          \"btc\": 40000,\n          \"eth\": 3000,\n          \"usd\": 1,\n          \"usdt\": 1\n        },\n        \"name_localized\": \"United Arab Emirates Dirham\",\n        \"min_trade_amount_usd\": -36590068.79711617\n      }\n    ]\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                }
            ],
            "id": "06bba5d6-10c6-4b87-825b-70dc1370a479"
        },
        {
            "name": "feedback",
            "item": [
                {
                    "name": "feedback/give",
                    "id": "146cb94f-e163-44ba-8f64-dede1240e510",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "trade_hash",
                                    "value": "adipisicing veniam laboris deserunt in",
                                    "description": "(Required) A hash (ID) of the trade."
                                },
                                {
                                    "key": "message",
                                    "value": "mollit Duis anim",
                                    "description": "(Required) Feedback message."
                                },
                                {
                                    "key": "rating",
                                    "value": "1",
                                    "description": "(Required) Rating. Possible values: 1(positive), -1(negative)."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/feedback/give",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "feedback",
                                "give"
                            ]
                        },
                        "description": "Give a feedback for a trade.\n            NB! Message should be encoded as required per RFC 3986 (i.e. spaces should look like %20)."
                    },
                    "response": [
                        {
                            "id": "9391e7ac-ec6d-4b93-ae8e-7e3c5f46f22e",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": "adipisicing veniam laboris deserunt in"
                                        },
                                        {
                                            "description": "(Required) Feedback message.",
                                            "key": "message",
                                            "value": "mollit Duis anim"
                                        },
                                        {
                                            "description": "(Required) Rating. Possible values: 1(positive), -1(negative).",
                                            "key": "rating",
                                            "value": "1"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/feedback/give",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "feedback",
                                        "give"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"success\": true\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "ff0a940e-4766-4e95-9c5b-579e09d86a74",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": "adipisicing veniam laboris deserunt in"
                                        },
                                        {
                                            "description": "(Required) Feedback message.",
                                            "key": "message",
                                            "value": "mollit Duis anim"
                                        },
                                        {
                                            "description": "(Required) Rating. Possible values: 1(positive), -1(negative).",
                                            "key": "rating",
                                            "value": "1"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/feedback/give",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "feedback",
                                        "give"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1003,\n    \"message\": \"The trade_hash field is required\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "feedback/list",
                    "id": "6f282d4c-7ed5-49cf-97e0-c95ada214998",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "page",
                                    "value": "1",
                                    "description": "A page to return, 10 feedback per page."
                                },
                                {
                                    "key": "role",
                                    "value": "seller",
                                    "description": "What kind of feedack to fetch - either from 'buyers' or 'sellers'. Possible values: 'buyer', 'seller'."
                                },
                                {
                                    "key": "rating",
                                    "value": "1",
                                    "description": "Rating. Possible values: 1(positive), -1(negative)."
                                },
                                {
                                    "key": "username",
                                    "value": "string",
                                    "description": "Username of a trader who you want to fetch feedback for.\nEither this filter or 'offer_hash' has to be used, if both are provided then an error will be returned."
                                },
                                {
                                    "key": "offer_hash",
                                    "value": "string",
                                    "description": "A hash (ID) of an offer.\nEither this filter or 'username' has to be used, if both are provided then an error will be returned."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/feedback/list",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "feedback",
                                "list"
                            ]
                        },
                        "description": "Fetch all feedback either for a user or an offer. Latest feedback is returned first."
                    },
                    "response": [
                        {
                            "id": "2c1c050a-ccec-41aa-b983-ea31841942e6",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "A page to return, 10 feedback per page.",
                                            "key": "page",
                                            "value": "1"
                                        },
                                        {
                                            "description": "What kind of feedack to fetch - either from 'buyers' or 'sellers'. Possible values: 'buyer', 'seller'.",
                                            "key": "role",
                                            "value": "seller"
                                        },
                                        {
                                            "description": "Rating. Possible values: 1(positive), -1(negative).",
                                            "key": "rating",
                                            "value": "1"
                                        },
                                        {
                                            "description": "Username of a trader who you want to fetch feedback for.\nEither this filter or 'offer_hash' has to be used, if both are provided then an error will be returned.",
                                            "key": "username",
                                            "value": "string"
                                        },
                                        {
                                            "description": "A hash (ID) of an offer.\nEither this filter or 'username' has to be used, if both are provided then an error will be returned.",
                                            "key": "offer_hash",
                                            "value": "string"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/feedback/list",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "feedback",
                                        "list"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"page\": 1,\n    \"count\": 10,\n    \"limit\": 10,\n    \"feedback\": [\n      {\n        \"rating\": 1,\n        \"message\": \"Some text\",\n        \"created_at\": \"2021-08-17 02:19:34\",\n        \"offer_hash\": \"offer_hash\",\n        \"trade_hash\": \"trade_hash\",\n        \"author_uuid\": \"<uuid_string>\",\n        \"receiver_uuid\": \"<uuid_string>\",\n        \"reply_message\": \"Some text\",\n        \"author_username\": \"Username\",\n        \"receiver_username\": \"Username\"\n      },\n      {\n        \"rating\": 1,\n        \"message\": \"Some text\",\n        \"created_at\": \"2021-08-17 02:19:34\",\n        \"offer_hash\": \"offer_hash\",\n        \"trade_hash\": \"trade_hash\",\n        \"author_uuid\": \"<uuid_string>\",\n        \"receiver_uuid\": \"<uuid_string>\",\n        \"reply_message\": \"Some text\",\n        \"author_username\": \"Username\",\n        \"receiver_username\": \"Username\"\n      }\n    ],\n    \"total_count\": 10\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "feedback/reply",
                    "id": "7eb62429-e95f-4897-a731-7234b2ffd26d",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "trade_hash",
                                    "value": "nulla offi",
                                    "description": "(Required) A hash (ID) of the trade."
                                },
                                {
                                    "key": "message",
                                    "value": "enim",
                                    "description": "(Required) Reply message."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/feedback/reply",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "feedback",
                                "reply"
                            ]
                        },
                        "description": "Reply to feedback."
                    },
                    "response": [
                        {
                            "id": "1ece6990-2d12-4dc3-8bcf-e02e22369c36",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": "nulla offi"
                                        },
                                        {
                                            "description": "(Required) Reply message.",
                                            "key": "message",
                                            "value": "enim"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/feedback/reply",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "feedback",
                                        "reply"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {},\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "197de871-d716-451b-ae44-4fcab44b87b1",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": "nulla offi"
                                        },
                                        {
                                            "description": "(Required) Reply message.",
                                            "key": "message",
                                            "value": "enim"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/feedback/reply",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "feedback",
                                        "reply"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1003,\n    \"message\": \"The trade_hash field is required\"\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                }
            ],
            "id": "cad93645-1856-478d-b072-9574da246490"
        },
        {
            "name": "trade-chat",
            "item": [
                {
                    "name": "image",
                    "item": [
                        {
                            "name": "trade-chat/image",
                            "id": "1237f4f9-de38-453c-a517-2d32f044f82c",
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            },
                            "request": {
                                "auth": {
                                    "type": "oauth2"
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/x-www-form-urlencoded"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "key": "image_hash",
                                            "value": "ea aute",
                                            "description": "(Required) Hash ID of an image. To get the hash id please refer to the image_hash parameter in response of the trade-chat/get endpoint."
                                        },
                                        {
                                            "key": "size",
                                            "value": "3",
                                            "description": "Size to fetch, either 1 (original), 2 (full sized) or 3 (thumbnail)."
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade-chat/image",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade-chat",
                                        "image"
                                    ]
                                },
                                "description": "Fetch an image attachment from a trade."
                            },
                            "response": [
                                {
                                    "id": "891c0433-336f-4010-84dd-80d965563962",
                                    "name": "Binary of an image with given image_hash.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: oauth2",
                                                "key": "Authorization",
                                                "value": "<token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "urlencoded",
                                            "urlencoded": [
                                                {
                                                    "description": "(Required) Hash ID of an image. To get the hash id please refer to the image_hash parameter in response of the trade-chat/get endpoint.",
                                                    "key": "image_hash",
                                                    "value": "ea aute"
                                                },
                                                {
                                                    "description": "Size to fetch, either 1 (original), 2 (full sized) or 3 (thumbnail).",
                                                    "key": "size",
                                                    "value": "3"
                                                }
                                            ]
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/trade-chat/image",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "trade-chat",
                                                "image"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "text",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": ""
                                },
                                {
                                    "id": "a4937038-808c-4fc0-bbb0-6c73ccd3df34",
                                    "name": "Bad request",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: oauth2",
                                                "key": "Authorization",
                                                "value": "<token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "urlencoded",
                                            "urlencoded": [
                                                {
                                                    "description": "(Required) Hash ID of an image. To get the hash id please refer to the image_hash parameter in response of the trade-chat/get endpoint.",
                                                    "key": "image_hash",
                                                    "value": "ea aute"
                                                },
                                                {
                                                    "description": "Size to fetch, either 1 (original), 2 (full sized) or 3 (thumbnail).",
                                                    "key": "size",
                                                    "value": "3"
                                                }
                                            ]
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/trade-chat/image",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "trade-chat",
                                                "image"
                                            ]
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n  \"data\": {\n    \"code\": 400,\n    \"message\": \"Invalid image hash\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                                },
                                {
                                    "id": "871eda18-5328-4ee6-85ed-f0af45705b56",
                                    "name": "Not found",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: oauth2",
                                                "key": "Authorization",
                                                "value": "<token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "urlencoded",
                                            "urlencoded": [
                                                {
                                                    "description": "(Required) Hash ID of an image. To get the hash id please refer to the image_hash parameter in response of the trade-chat/get endpoint.",
                                                    "key": "image_hash",
                                                    "value": "ea aute"
                                                },
                                                {
                                                    "description": "Size to fetch, either 1 (original), 2 (full sized) or 3 (thumbnail).",
                                                    "key": "size",
                                                    "value": "3"
                                                }
                                            ]
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/trade-chat/image",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "trade-chat",
                                                "image"
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n  \"data\": {\n    \"code\": 404,\n    \"message\": \"Not Found\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                                }
                            ]
                        },
                        {
                            "name": "trade-chat/image/add",
                            "id": "1d651a99-6d64-4319-b791-67e2b2af3df6",
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            },
                            "request": {
                                "auth": {
                                    "type": "oauth2"
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/x-www-form-urlencoded"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "key": "trade_hash",
                                            "value": "con",
                                            "description": "(Required) A hash (ID) of the trade."
                                        },
                                        {
                                            "key": "file",
                                            "value": "Duis minim consectetur",
                                            "description": "(Required) URL of a publicly accessible file in the Internet. Supported formats are jpeg, png, jpg. Files up to 10mb are only allowed.\nWhen the endpoint is invoked, Paxful will download an image from the specified URL and post it to a given trade chat.\nPlease consider using image/upload endpoint instead as it will process uploaded image instantly."
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade-chat/image/add",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade-chat",
                                        "image",
                                        "add"
                                    ]
                                },
                                "description": "Attach image to a trade chat."
                            },
                            "response": [
                                {
                                    "id": "e9ec4d5f-16f6-4864-94ff-7ed58fc21f82",
                                    "name": "Success result",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: oauth2",
                                                "key": "Authorization",
                                                "value": "<token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "urlencoded",
                                            "urlencoded": [
                                                {
                                                    "description": "(Required) A hash (ID) of the trade.",
                                                    "key": "trade_hash",
                                                    "value": "con"
                                                },
                                                {
                                                    "description": "(Required) URL of a publicly accessible file in the Internet. Supported formats are jpeg, png, jpg. Files up to 10mb are only allowed.\nWhen the endpoint is invoked, Paxful will download an image from the specified URL and post it to a given trade chat.\nPlease consider using image/upload endpoint instead as it will process uploaded image instantly.",
                                                    "key": "file",
                                                    "value": "Duis minim consectetur"
                                                }
                                            ]
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/trade-chat/image/add",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "trade-chat",
                                                "image",
                                                "add"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"success\": true\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                                },
                                {
                                    "id": "866b5fb2-cf54-4bd0-a9e5-47130befb706",
                                    "name": "Bad request",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: oauth2",
                                                "key": "Authorization",
                                                "value": "<token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "urlencoded",
                                            "urlencoded": [
                                                {
                                                    "description": "(Required) A hash (ID) of the trade.",
                                                    "key": "trade_hash",
                                                    "value": "con"
                                                },
                                                {
                                                    "description": "(Required) URL of a publicly accessible file in the Internet. Supported formats are jpeg, png, jpg. Files up to 10mb are only allowed.\nWhen the endpoint is invoked, Paxful will download an image from the specified URL and post it to a given trade chat.\nPlease consider using image/upload endpoint instead as it will process uploaded image instantly.",
                                                    "key": "file",
                                                    "value": "Duis minim consectetur"
                                                }
                                            ]
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/trade-chat/image/add",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "trade-chat",
                                                "image",
                                                "add"
                                            ]
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n  \"data\": {\n    \"code\": 1003,\n    \"message\": \"Missing trade hash\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                                }
                            ]
                        },
                        {
                            "name": "trade-chat/image/upload",
                            "id": "61737b7b-d253-445e-bba8-74540e8ce71d",
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            },
                            "request": {
                                "auth": {
                                    "type": "oauth2"
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "key": "trade_hash",
                                            "value": "proident id irure",
                                            "type": "text",
                                            "description": "undefined"
                                        },
                                        {
                                            "key": "file",
                                            "value": "mollit est occaecat",
                                            "type": "text",
                                            "description": "undefined"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade-chat/image/upload",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade-chat",
                                        "image",
                                        "upload"
                                    ]
                                },
                                "description": "Upload image to a trade chat.\n     This endpoint can be used only with OAuth 2.0 authentiction method."
                            },
                            "response": [
                                {
                                    "id": "0143f4bc-9fa1-4ba7-83a7-dcb9101a6b23",
                                    "name": "Success result",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: oauth2",
                                                "key": "Authorization",
                                                "value": "<token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "formdata",
                                            "formdata": [
                                                {
                                                    "description": "undefined",
                                                    "key": "trade_hash",
                                                    "value": "proident id irure",
                                                    "type": "text"
                                                },
                                                {
                                                    "description": "undefined",
                                                    "key": "file",
                                                    "value": "mollit est occaecat",
                                                    "type": "text"
                                                }
                                            ]
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/trade-chat/image/upload",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "trade-chat",
                                                "image",
                                                "upload"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"success\": true\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                                },
                                {
                                    "id": "8f900af6-1ff4-46e9-ad56-1f1c3c48ac9b",
                                    "name": "Bad request",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": "Added as a part of security scheme: oauth2",
                                                "key": "Authorization",
                                                "value": "<token>"
                                            }
                                        ],
                                        "body": {
                                            "mode": "formdata",
                                            "formdata": [
                                                {
                                                    "description": "undefined",
                                                    "key": "trade_hash",
                                                    "value": "proident id irure",
                                                    "type": "text"
                                                },
                                                {
                                                    "description": "undefined",
                                                    "key": "file",
                                                    "value": "mollit est occaecat",
                                                    "type": "text"
                                                }
                                            ]
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/trade-chat/image/upload",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "trade-chat",
                                                "image",
                                                "upload"
                                            ]
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "responseTime": null,
                                    "body": "{\n  \"data\": {\n    \"code\": 400,\n    \"message\": \"Trade not found\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                                }
                            ]
                        }
                    ],
                    "id": "b07e27fb-eb42-4ffb-9806-8b5a13837a41"
                },
                {
                    "name": "trade-chat/get",
                    "id": "0f351284-7c12-49a7-aaf2-642a1c86090a",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "trade_hash",
                                    "value": "nisi tempor non irure incididunt",
                                    "description": "(Required) A hash (ID) of the trade."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/trade-chat/get",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "trade-chat",
                                "get"
                            ]
                        },
                        "description": "Fetch messages for a trade."
                    },
                    "response": [
                        {
                            "id": "c788633d-d6fc-4ec7-ae19-5f19d9248ed1",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": "nisi tempor non irure incididunt"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade-chat/get",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade-chat",
                                        "get"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"messages\": [\n      {\n        \"id\": \"<string>\",\n        \"text\": \"Some text\",\n        \"type\": \"msg\",\n        \"author\": \"name\",\n        \"timestamp\": -62763219.38918121,\n        \"trade_hash\": \"<string>\",\n        \"author_uuid\": \"<uuid_string>\",\n        \"is_for_moderator\": true,\n        \"sent_by_moderator\": false,\n        \"security_awareness\": {\n          \"type\": \"phishing_awareness\",\n          \"message_type\": \"attachment\"\n        }\n      },\n      {\n        \"id\": \"<string>\",\n        \"text\": \"Some text\",\n        \"type\": \"msg\",\n        \"author\": \"name\",\n        \"timestamp\": -98315631.59927183,\n        \"trade_hash\": \"<string>\",\n        \"author_uuid\": \"<uuid_string>\",\n        \"is_for_moderator\": true,\n        \"sent_by_moderator\": false,\n        \"security_awareness\": {\n          \"type\": \"phishing_awareness\",\n          \"message_type\": \"attachment\"\n        }\n      }\n    ],\n    \"attachments\": [\n      {\n        \"author\": \"name\",\n        \"image_hash\": \"<string>\"\n      },\n      {\n        \"author\": \"name\",\n        \"image_hash\": \"<string>\"\n      }\n    ]\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "4adccece-3d48-4a39-aeb0-cc488f074379",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": "nisi tempor non irure incididunt"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade-chat/get",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade-chat",
                                        "get"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1003,\n    \"message\": \"Trade not found\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "trade-chat/post",
                    "id": "935108b4-d62b-4543-82a3-d01b99fb5ce1",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "trade_hash",
                                    "value": "dolore irure cupidatat",
                                    "description": "(Required) A hash (ID) of the trade."
                                },
                                {
                                    "key": "message",
                                    "value": "occaeca",
                                    "description": "(Required) Message content."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/trade-chat/post",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "trade-chat",
                                "post"
                            ]
                        },
                        "description": "Post message to a trade chat."
                    },
                    "response": [
                        {
                            "id": "0555f85c-4940-4a6a-b953-c7dae59e4f4e",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": "dolore irure cupidatat"
                                        },
                                        {
                                            "description": "(Required) Message content.",
                                            "key": "message",
                                            "value": "occaeca"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade-chat/post",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade-chat",
                                        "post"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"success\": true\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "37183f51-94e8-4367-aa94-ceaa28a7d63b",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) A hash (ID) of the trade.",
                                            "key": "trade_hash",
                                            "value": "dolore irure cupidatat"
                                        },
                                        {
                                            "description": "(Required) Message content.",
                                            "key": "message",
                                            "value": "occaeca"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade-chat/post",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade-chat",
                                        "post"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1006,\n    \"message\": \"Trade not found\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "trade-chat/latest",
                    "id": "2be625ce-d84a-4d86-b22f-c9a356d07fab",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "trade_hash",
                                    "value": "reprehenderit exercitation",
                                    "description": "Hash ID of a trade. If specified, method returns latest messages only for this trade. If omitted, the method return latest messages/attachments for all active trades."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/trade-chat/latest",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "trade-chat",
                                "latest"
                            ]
                        },
                        "description": "Fetch latest messages for all active trades, or for one trade if trade_hash filter is specified.\n     Latest messages are messages posted in last 10 minutes."
                    },
                    "response": [
                        {
                            "id": "32a68b4c-4713-459d-a210-7a9e20da8700",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "Hash ID of a trade. If specified, method returns latest messages only for this trade. If omitted, the method return latest messages/attachments for all active trades.",
                                            "key": "trade_hash",
                                            "value": "reprehenderit exercitation"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade-chat/latest",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade-chat",
                                        "latest"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"count\": 1,\n    \"trades\": {\n      \"<trade_hash>\": {\n        \"messages\": [\n          {\n            \"id\": \"<string>\",\n            \"text\": \"Some text\",\n            \"type\": \"msg\",\n            \"author\": \"name\",\n            \"timestamp\": -94521716.64683889,\n            \"trade_hash\": \"<string>\",\n            \"author_uuid\": \"<uuid_string>\",\n            \"is_for_moderator\": true,\n            \"sent_by_moderator\": false,\n            \"security_awareness\": {\n              \"type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"message_type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          },\n          {\n            \"id\": \"<string>\",\n            \"text\": \"Some text\",\n            \"type\": \"msg\",\n            \"author\": \"name\",\n            \"timestamp\": -24601789.594329253,\n            \"trade_hash\": \"<string>\",\n            \"author_uuid\": \"<uuid_string>\",\n            \"is_for_moderator\": true,\n            \"sent_by_moderator\": false,\n            \"security_awareness\": {\n              \"type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"message_type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          }\n        ],\n        \"attachments\": [\n          {\n            \"author\": \"name\",\n            \"image_hash\": \"<string>\"\n          },\n          {\n            \"author\": \"name\",\n            \"image_hash\": \"<string>\"\n          }\n        ]\n      }\n    }\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "68fc5a20-398e-4578-8ad9-31f6d079a996",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "Hash ID of a trade. If specified, method returns latest messages only for this trade. If omitted, the method return latest messages/attachments for all active trades.",
                                            "key": "trade_hash",
                                            "value": "reprehenderit exercitation"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/trade-chat/latest",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "trade-chat",
                                        "latest"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1006,\n    \"message\": \"Trade not found\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                }
            ],
            "id": "d82e497a-b5a5-4ce1-82d4-f9986d8bc807"
        },
        {
            "name": "wallet",
            "item": [
                {
                    "name": "wallet/balance",
                    "id": "7102cce8-76b1-476c-b3d6-c6f8a95155bd",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "crypto_currency_code",
                                    "value": "dolore eiusmod",
                                    "description": "Cryptocurrency code of balance. By default - BTC. For a list of current supported cryptocurrencies please refer to crypto/list endpoint."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/wallet/balance",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "wallet",
                                "balance"
                            ]
                        },
                        "description": "Fetch an user balance."
                    },
                    "response": [
                        {
                            "id": "6b122437-2635-44b3-9682-7371a703632e",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "Cryptocurrency code of balance. By default - BTC. For a list of current supported cryptocurrencies please refer to crypto/list endpoint.",
                                            "key": "crypto_currency_code",
                                            "value": "dolore eiusmod"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/wallet/balance",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "wallet",
                                        "balance"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"balance\": 10000,\n    \"balance_escrow\": 0,\n    \"incoming_amount\": 0,\n    \"crypto_currency_code\": \"BTC\"\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "8b3eb934-75da-433d-beda-cae969d1be67",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "Cryptocurrency code of balance. By default - BTC. For a list of current supported cryptocurrencies please refer to crypto/list endpoint.",
                                            "key": "crypto_currency_code",
                                            "value": "dolore eiusmod"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/wallet/balance",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "wallet",
                                        "balance"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 400,\n    \"message\": \"Unknown crypto currency id\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "wallet/convert",
                    "id": "747f0016-f30d-4af6-b057-a2bf96f089f6",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "order_id",
                                    "value": "nulla in amet",
                                    "description": "(Required) Unique ID (UUID) of the conversion, that your application needs to generate.\nHaving this parameter ensures idempotency of the operation - you can invoke the endpoint as many times with the same parameter, but conversion will be executed only once.\nThis helps to avoid accidental double conversions."
                                },
                                {
                                    "key": "quote_id",
                                    "value": "reprehenderit culpa qui cillum",
                                    "description": "(Required) Value for this field can be fetched using wallet/conversion-quotes endpoint."
                                },
                                {
                                    "key": "convert_from",
                                    "value": "consectetur qui dolore cupi",
                                    "description": "(Required) Cryptocurrency to convert from. For a list of current supported cryptocurrencies please refer to crypto/list endpoint."
                                },
                                {
                                    "key": "convert_to",
                                    "value": "ea",
                                    "description": "(Required) Cryptocurrency to convert to. For a list of current supported cryptocurrencies please refer to crypto/list endpoint."
                                },
                                {
                                    "key": "amount",
                                    "value": "58354235.27816191",
                                    "description": "(Required) Amount to convert in cryptocurrency. For BTC in Satoshi, for ETH in GWEI, for USDT in micro cents, e.g. 1 USDT = 1000000 micro cents."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/wallet/convert",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "wallet",
                                "convert"
                            ]
                        },
                        "description": "Convert from one crypto currency to another."
                    },
                    "response": [
                        {
                            "id": "0c208d37-bf3b-437f-bde6-5d0b118aad3f",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) Unique ID (UUID) of the conversion, that your application needs to generate.\nHaving this parameter ensures idempotency of the operation - you can invoke the endpoint as many times with the same parameter, but conversion will be executed only once.\nThis helps to avoid accidental double conversions.",
                                            "key": "order_id",
                                            "value": "nulla in amet"
                                        },
                                        {
                                            "description": "(Required) Value for this field can be fetched using wallet/conversion-quotes endpoint.",
                                            "key": "quote_id",
                                            "value": "reprehenderit culpa qui cillum"
                                        },
                                        {
                                            "description": "(Required) Cryptocurrency to convert from. For a list of current supported cryptocurrencies please refer to crypto/list endpoint.",
                                            "key": "convert_from",
                                            "value": "consectetur qui dolore cupi"
                                        },
                                        {
                                            "description": "(Required) Cryptocurrency to convert to. For a list of current supported cryptocurrencies please refer to crypto/list endpoint.",
                                            "key": "convert_to",
                                            "value": "ea"
                                        },
                                        {
                                            "description": "(Required) Amount to convert in cryptocurrency. For BTC in Satoshi, for ETH in GWEI, for USDT in micro cents, e.g. 1 USDT = 1000000 micro cents.",
                                            "key": "amount",
                                            "value": "58354235.27816191"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/wallet/convert",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "wallet",
                                        "convert"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"order_id\": \"est\",\n    \"converted_to_amount\": 64216514.79988858,\n    \"converted_from_amount\": -53441412.55472135,\n    \"converted_to_crypto_currency_code\": \"Excepteur consectetur tempor fugiat\",\n    \"converted_from_crypto_currency_code\": \"cupidatat Excepteur est anim\"\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "9786b495-adbf-49b6-aa63-43f6eac783ee",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) Unique ID (UUID) of the conversion, that your application needs to generate.\nHaving this parameter ensures idempotency of the operation - you can invoke the endpoint as many times with the same parameter, but conversion will be executed only once.\nThis helps to avoid accidental double conversions.",
                                            "key": "order_id",
                                            "value": "nulla in amet"
                                        },
                                        {
                                            "description": "(Required) Value for this field can be fetched using wallet/conversion-quotes endpoint.",
                                            "key": "quote_id",
                                            "value": "reprehenderit culpa qui cillum"
                                        },
                                        {
                                            "description": "(Required) Cryptocurrency to convert from. For a list of current supported cryptocurrencies please refer to crypto/list endpoint.",
                                            "key": "convert_from",
                                            "value": "consectetur qui dolore cupi"
                                        },
                                        {
                                            "description": "(Required) Cryptocurrency to convert to. For a list of current supported cryptocurrencies please refer to crypto/list endpoint.",
                                            "key": "convert_to",
                                            "value": "ea"
                                        },
                                        {
                                            "description": "(Required) Amount to convert in cryptocurrency. For BTC in Satoshi, for ETH in GWEI, for USDT in micro cents, e.g. 1 USDT = 1000000 micro cents.",
                                            "key": "amount",
                                            "value": "58354235.27816191"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/wallet/convert",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "wallet",
                                        "convert"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 400,\n    \"message\": \"Conversion not available\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "wallet/new-address",
                    "id": "e4be81f9-a0e1-4b58-b5f9-483e2b8c110e",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": []
                        },
                        "url": {
                            "raw": "{{baseUrl}}/wallet/new-address",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "wallet",
                                "new-address"
                            ]
                        },
                        "description": "Generate a new wallet address (currently only BTC is supported)."
                    },
                    "response": [
                        {
                            "id": "c87558f4-3bd4-4e6e-9389-fa62ec39ea55",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": []
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/wallet/new-address",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "wallet",
                                        "new-address"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"address\": \"<string>\",\n    \"crypto_currency_code\": \"BTC\"\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "daa12e41-066f-4efe-b43c-14c88169b4b5",
                            "name": "Server error",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": []
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/wallet/new-address",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "wallet",
                                        "new-address"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1009,\n    \"message\": \"Unable to generate address, admin notified\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "2eb7d88b-fa41-4457-ba5d-66f25ba25ae8",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": []
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/wallet/new-address",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "wallet",
                                        "new-address"
                                    ]
                                }
                            },
                            "status": "Not Implemented",
                            "code": 501,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 501,\n    \"message\": \"Operation is unsupported for crypto currency\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "wallet/list-addresses",
                    "id": "a5b74e48-faea-45a8-8d96-6b396af11a89",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "crypto_currency_code",
                                    "value": "elit non anim commodo",
                                    "description": "Cryptocurrency code of the wallet addresses. By default - BTC. For a list of current supported cryptocurrencies please refer to crypto/list endpoint."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/wallet/list-addresses",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "wallet",
                                "list-addresses"
                            ]
                        },
                        "description": "Fetch list of your addresses."
                    },
                    "response": [
                        {
                            "id": "e273143d-02ee-475c-a09b-2d4653064998",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "Cryptocurrency code of the wallet addresses. By default - BTC. For a list of current supported cryptocurrencies please refer to crypto/list endpoint.",
                                            "key": "crypto_currency_code",
                                            "value": "elit non anim commodo"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/wallet/list-addresses",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "wallet",
                                        "list-addresses"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"addresses\": [\n      {\n        \"address\": \"deserunt cupidatat\",\n        \"created\": \"incididun\",\n        \"is_master\": true,\n        \"total_received\": -66676198.460629,\n        \"crypto_currency_code\": \"BTC\"\n      },\n      {\n        \"address\": \"Ut mollit sit\",\n        \"created\": \"in Excepteur fugiat esse eu\",\n        \"is_master\": true,\n        \"total_received\": 76682582.98878157,\n        \"crypto_currency_code\": \"BTC\"\n      }\n    ]\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "888a3291-b787-4a67-a551-2a827a5c21ac",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "Cryptocurrency code of the wallet addresses. By default - BTC. For a list of current supported cryptocurrencies please refer to crypto/list endpoint.",
                                            "key": "crypto_currency_code",
                                            "value": "elit non anim commodo"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/wallet/list-addresses",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "wallet",
                                        "list-addresses"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 400,\n    \"message\": \"Unknown crypto currency code\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "wallet/conversion-quotes",
                    "id": "91263c5f-6bfe-465c-90e0-454db885e38a",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "convert_to",
                                    "value": "labore quis qui tempor exercitation",
                                    "description": "Cryptocurrency to convert to. For a list of current supported cryptocurrencies please refer to crypto/list endpoint."
                                },
                                {
                                    "key": "convert_from",
                                    "value": "culpa nisi id qui amet",
                                    "description": "Cryptocurrency to convert from. For a list of current supported cryptocurrencies please refer to crypto/list endpoint."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/wallet/conversion-quotes",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "wallet",
                                "conversion-quotes"
                            ]
                        },
                        "description": "Get the current conversion quotes for supported crypto currency pairs."
                    },
                    "response": [
                        {
                            "id": "add0dc87-e817-47cd-908d-b84a202e3b36",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "Cryptocurrency to convert to. For a list of current supported cryptocurrencies please refer to crypto/list endpoint.",
                                            "key": "convert_to",
                                            "value": "labore quis qui tempor exercitation"
                                        },
                                        {
                                            "description": "Cryptocurrency to convert from. For a list of current supported cryptocurrencies please refer to crypto/list endpoint.",
                                            "key": "convert_from",
                                            "value": "culpa nisi id qui amet"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/wallet/conversion-quotes",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "wallet",
                                        "conversion-quotes"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"quotes\": [\n      {\n        \"pair\": \"BTCUSDT\",\n        \"quote_id\": \"2af45293-7e91-43bf-ad69-eea8e878f4ac\",\n        \"is_active\": true,\n        \"expired_time\": \"2021-04-01 10:15:56\",\n        \"converstion_rate\": {\n          \"amount\": 62764307.44125712,\n          \"currency_code\": \"ea\"\n        }\n      },\n      {\n        \"pair\": \"BTCUSDT\",\n        \"quote_id\": \"2af45293-7e91-43bf-ad69-eea8e878f4ac\",\n        \"is_active\": true,\n        \"expired_time\": \"2021-04-01 10:15:56\",\n        \"converstion_rate\": {\n          \"amount\": 8366055.2759551555,\n          \"currency_code\": \"culpa dolore non deserunt\"\n        }\n      }\n    ]\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "b4439b65-b812-47dc-a07d-c4be2004da48",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "Cryptocurrency to convert to. For a list of current supported cryptocurrencies please refer to crypto/list endpoint.",
                                            "key": "convert_to",
                                            "value": "labore quis qui tempor exercitation"
                                        },
                                        {
                                            "description": "Cryptocurrency to convert from. For a list of current supported cryptocurrencies please refer to crypto/list endpoint.",
                                            "key": "convert_from",
                                            "value": "culpa nisi id qui amet"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/wallet/conversion-quotes",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "wallet",
                                        "conversion-quotes"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 400,\n    \"message\": \"Conversion quotes is not available\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                }
            ],
            "id": "0f808476-0b92-410c-bc8a-fb36223384f0"
        },
        {
            "name": "bank-account",
            "item": [
                {
                    "name": "bank-account/get",
                    "id": "3bd8ac14-a7b7-4d39-a116-83cebbceb040",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "bank_account_uuid",
                                    "value": "00000000-0000-0000-0000-000000000000",
                                    "description": "(Required) Bank account uuid."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/bank-account/get",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "bank-account",
                                "get"
                            ]
                        },
                        "description": "Show bank account."
                    },
                    "response": [
                        {
                            "id": "6a88e143-68d5-486b-8b2e-3a5a95a83eb3",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) Bank account uuid.",
                                            "key": "bank_account_uuid",
                                            "value": "00000000-0000-0000-0000-000000000000"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/bank-account/get",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "bank-account",
                                        "get"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"iban\": \"CR99000000000000888888\",\n    \"ifsc\": \"SBIN0005943\",\n    \"clabe\": \"032180000118359719\",\n    \"bank_name\": \"SunTrust\",\n    \"bank_uuid\": \"00000000-0000-0000-0000-000000000000\",\n    \"swift_code\": \"BC12345678\",\n    \"country_iso\": \"US\",\n    \"holder_name\": \"John Smith\",\n    \"is_personal\": true,\n    \"account_number\": \"AL47212110090000000235698741\",\n    \"routing_number\": \"012345678\",\n    \"additional_info\": \"Use BIC code 123456789\",\n    \"bank_account_uuid\": \"00000000-0000-0000-0000-000000000000\",\n    \"fiat_currency_code\": \"USD\",\n    \"international_details\": {\n      \"zip\": \"Some text\",\n      \"city\": \"Some text\",\n      \"state\": \"Some text\",\n      \"address\": \"Some text\",\n      \"residency\": \"Some text\"\n    },\n    \"trade_hash\": \"<string>\"\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "7ab2f485-3284-49d6-85c3-d8f96e0fb0e7",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) Bank account uuid.",
                                            "key": "bank_account_uuid",
                                            "value": "00000000-0000-0000-0000-000000000000"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/bank-account/get",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "bank-account",
                                        "get"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1004,\n    \"message\": \"Error validating input data\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "bank-account/list",
                    "id": "6b5bcccf-c040-433c-83c8-2f8b1cfde9f1",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": []
                        },
                        "url": {
                            "raw": "{{baseUrl}}/bank-account/list",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "bank-account",
                                "list"
                            ]
                        },
                        "description": "Fetch all available bank accounts."
                    },
                    "response": [
                        {
                            "id": "aa6b753a-0001-494f-ad74-40e1da669e6c",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": []
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/bank-account/list",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "bank-account",
                                        "list"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
                        },
                        {
                            "id": "078b2516-d5e2-4710-9c1b-20b5353108e6",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": []
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/bank-account/list",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "bank-account",
                                        "list"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1004,\n    \"message\": \"Error validating input data\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "bank-account/create",
                    "id": "5faaf405-0a62-4e75-a174-f837829049d9",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "iban",
                                    "value": "CR99000000000000888888",
                                    "description": "IBAN."
                                },
                                {
                                    "key": "ifsc",
                                    "value": "SBIN0005943",
                                    "description": "IFSC."
                                },
                                {
                                    "key": "clabe",
                                    "value": "032180000118359719",
                                    "description": "Clabe."
                                },
                                {
                                    "key": "bank_name",
                                    "value": "SunTrust",
                                    "description": "Bank name."
                                },
                                {
                                    "key": "bank_uuid",
                                    "value": "00000000-0000-0000-0000-000000000000",
                                    "description": "Bank ID."
                                },
                                {
                                    "key": "swift_code",
                                    "value": "BC12345678",
                                    "description": "Swift code."
                                },
                                {
                                    "key": "country_iso",
                                    "value": "US",
                                    "description": "(Required) ISO country code of the offer owner."
                                },
                                {
                                    "key": "holder_name",
                                    "value": "John Smith",
                                    "description": "(Required) Holder name."
                                },
                                {
                                    "key": "is_personal",
                                    "value": "true",
                                    "description": "(Required) Is personal or business account."
                                },
                                {
                                    "key": "account_number",
                                    "value": "AL47212110090000000235698741",
                                    "description": "Bank account number."
                                },
                                {
                                    "key": "routing_number",
                                    "value": "012345678",
                                    "description": "Routing number."
                                },
                                {
                                    "key": "additional_info",
                                    "value": "Use BIC code 123456789",
                                    "description": "Additional information about bank account with country-specific data."
                                },
                                {
                                    "key": "fiat_currency_code",
                                    "value": "USD",
                                    "description": "(Required) 3 letter ISO code for fiat currency."
                                },
                                {
                                    "key": "zip",
                                    "value": "Some text"
                                },
                                {
                                    "key": "city",
                                    "value": "Some text"
                                },
                                {
                                    "key": "state",
                                    "value": "Some text"
                                },
                                {
                                    "key": "address",
                                    "value": "Some text"
                                },
                                {
                                    "key": "residency",
                                    "value": "Some text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/bank-account/create",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "bank-account",
                                "create"
                            ]
                        },
                        "description": "Create bank account."
                    },
                    "response": [
                        {
                            "id": "b34945c6-34cf-4acc-9425-70bc54738f8a",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "IBAN.",
                                            "key": "iban",
                                            "value": "CR99000000000000888888"
                                        },
                                        {
                                            "description": "IFSC.",
                                            "key": "ifsc",
                                            "value": "SBIN0005943"
                                        },
                                        {
                                            "description": "Clabe.",
                                            "key": "clabe",
                                            "value": "032180000118359719"
                                        },
                                        {
                                            "description": "Bank name.",
                                            "key": "bank_name",
                                            "value": "SunTrust"
                                        },
                                        {
                                            "description": "Bank ID.",
                                            "key": "bank_uuid",
                                            "value": "00000000-0000-0000-0000-000000000000"
                                        },
                                        {
                                            "description": "Swift code.",
                                            "key": "swift_code",
                                            "value": "BC12345678"
                                        },
                                        {
                                            "description": "(Required) ISO country code of the offer owner.",
                                            "key": "country_iso",
                                            "value": "US"
                                        },
                                        {
                                            "description": "(Required) Holder name.",
                                            "key": "holder_name",
                                            "value": "John Smith"
                                        },
                                        {
                                            "description": "(Required) Is personal or business account.",
                                            "key": "is_personal",
                                            "value": "true"
                                        },
                                        {
                                            "description": "Bank account number.",
                                            "key": "account_number",
                                            "value": "AL47212110090000000235698741"
                                        },
                                        {
                                            "description": "Routing number.",
                                            "key": "routing_number",
                                            "value": "012345678"
                                        },
                                        {
                                            "description": "Additional information about bank account with country-specific data.",
                                            "key": "additional_info",
                                            "value": "Use BIC code 123456789"
                                        },
                                        {
                                            "description": "(Required) 3 letter ISO code for fiat currency.",
                                            "key": "fiat_currency_code",
                                            "value": "USD"
                                        },
                                        {
                                            "key": "zip",
                                            "value": "Some text"
                                        },
                                        {
                                            "key": "city",
                                            "value": "Some text"
                                        },
                                        {
                                            "key": "state",
                                            "value": "Some text"
                                        },
                                        {
                                            "key": "address",
                                            "value": "Some text"
                                        },
                                        {
                                            "key": "residency",
                                            "value": "Some text"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/bank-account/create",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "bank-account",
                                        "create"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"iban\": \"CR99000000000000888888\",\n    \"ifsc\": \"SBIN0005943\",\n    \"clabe\": \"032180000118359719\",\n    \"bank_name\": \"SunTrust\",\n    \"bank_uuid\": \"00000000-0000-0000-0000-000000000000\",\n    \"swift_code\": \"BC12345678\",\n    \"country_iso\": \"US\",\n    \"holder_name\": \"John Smith\",\n    \"is_personal\": true,\n    \"account_number\": \"AL47212110090000000235698741\",\n    \"routing_number\": \"012345678\",\n    \"additional_info\": \"Use BIC code 123456789\",\n    \"bank_account_uuid\": \"00000000-0000-0000-0000-000000000000\",\n    \"fiat_currency_code\": \"USD\",\n    \"international_details\": {\n      \"zip\": \"Some text\",\n      \"city\": \"Some text\",\n      \"state\": \"Some text\",\n      \"address\": \"Some text\",\n      \"residency\": \"Some text\"\n    }\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "980bed61-b7de-4cc8-b5ce-a20f47673d6b",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "IBAN.",
                                            "key": "iban",
                                            "value": "CR99000000000000888888"
                                        },
                                        {
                                            "description": "IFSC.",
                                            "key": "ifsc",
                                            "value": "SBIN0005943"
                                        },
                                        {
                                            "description": "Clabe.",
                                            "key": "clabe",
                                            "value": "032180000118359719"
                                        },
                                        {
                                            "description": "Bank name.",
                                            "key": "bank_name",
                                            "value": "SunTrust"
                                        },
                                        {
                                            "description": "Bank ID.",
                                            "key": "bank_uuid",
                                            "value": "00000000-0000-0000-0000-000000000000"
                                        },
                                        {
                                            "description": "Swift code.",
                                            "key": "swift_code",
                                            "value": "BC12345678"
                                        },
                                        {
                                            "description": "(Required) ISO country code of the offer owner.",
                                            "key": "country_iso",
                                            "value": "US"
                                        },
                                        {
                                            "description": "(Required) Holder name.",
                                            "key": "holder_name",
                                            "value": "John Smith"
                                        },
                                        {
                                            "description": "(Required) Is personal or business account.",
                                            "key": "is_personal",
                                            "value": "true"
                                        },
                                        {
                                            "description": "Bank account number.",
                                            "key": "account_number",
                                            "value": "AL47212110090000000235698741"
                                        },
                                        {
                                            "description": "Routing number.",
                                            "key": "routing_number",
                                            "value": "012345678"
                                        },
                                        {
                                            "description": "Additional information about bank account with country-specific data.",
                                            "key": "additional_info",
                                            "value": "Use BIC code 123456789"
                                        },
                                        {
                                            "description": "(Required) 3 letter ISO code for fiat currency.",
                                            "key": "fiat_currency_code",
                                            "value": "USD"
                                        },
                                        {
                                            "key": "zip",
                                            "value": "Some text"
                                        },
                                        {
                                            "key": "city",
                                            "value": "Some text"
                                        },
                                        {
                                            "key": "state",
                                            "value": "Some text"
                                        },
                                        {
                                            "key": "address",
                                            "value": "Some text"
                                        },
                                        {
                                            "key": "residency",
                                            "value": "Some text"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/bank-account/create",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "bank-account",
                                        "create"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1004,\n    \"message\": \"Error validating input data\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "bank-account/delete",
                    "id": "3f1bd9f4-606d-4e24-9812-54a3e2696d24",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "bank_account_uuid",
                                    "value": "00000000-0000-0000-0000-000000000000",
                                    "description": "(Required) Bank account uuid."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/bank-account/delete",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "bank-account",
                                "delete"
                            ]
                        },
                        "description": "Delete bank account."
                    },
                    "response": [
                        {
                            "id": "51e4f939-4344-4081-805a-0ade9f3b859e",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) Bank account uuid.",
                                            "key": "bank_account_uuid",
                                            "value": "00000000-0000-0000-0000-000000000000"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/bank-account/delete",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "bank-account",
                                        "delete"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{}"
                        },
                        {
                            "id": "a5326e6c-b938-47bf-a42f-396c1388a69c",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "(Required) Bank account uuid.",
                                            "key": "bank_account_uuid",
                                            "value": "00000000-0000-0000-0000-000000000000"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/bank-account/delete",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "bank-account",
                                        "delete"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1004,\n    \"message\": \"Error validating input data\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "bank-account/update",
                    "id": "109ad27a-f008-48f8-959d-ddd6278bee00",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "bank_account_uuid",
                                    "value": "00000000-0000-0000-0000-000000000000"
                                },
                                {
                                    "key": "country_iso",
                                    "value": "US"
                                },
                                {
                                    "key": "fiat_currency_code",
                                    "value": "USD"
                                },
                                {
                                    "key": "holder_name",
                                    "value": "John Smith"
                                },
                                {
                                    "key": "is_personal",
                                    "value": "true"
                                },
                                {
                                    "key": "iban",
                                    "value": "CR99000000000000888888"
                                },
                                {
                                    "key": "ifsc",
                                    "value": "SBIN0005943"
                                },
                                {
                                    "key": "clabe",
                                    "value": "032180000118359719"
                                },
                                {
                                    "key": "bank_name",
                                    "value": "SunTrust"
                                },
                                {
                                    "key": "bank_uuid",
                                    "value": "00000000-0000-0000-0000-000000000000"
                                },
                                {
                                    "key": "swift_code",
                                    "value": "BC12345678"
                                },
                                {
                                    "key": "account_number",
                                    "value": "AL47212110090000000235698741"
                                },
                                {
                                    "key": "routing_number",
                                    "value": "012345678"
                                },
                                {
                                    "key": "additional_info",
                                    "value": "Use BIC code 123456789"
                                },
                                {
                                    "key": "international_details[zip]",
                                    "value": "Some text"
                                },
                                {
                                    "key": "international_details[city]",
                                    "value": "Some text"
                                },
                                {
                                    "key": "international_details[state]",
                                    "value": "Some text"
                                },
                                {
                                    "key": "international_details[address]",
                                    "value": "Some text"
                                },
                                {
                                    "key": "international_details[residency]",
                                    "value": "Some text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/bank-account/update",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "bank-account",
                                "update"
                            ]
                        },
                        "description": "Update bank account."
                    },
                    "response": [
                        {
                            "id": "1cfb0357-f971-4601-8f65-d10ca1d4ef35",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "key": "bank_account_uuid",
                                            "value": "00000000-0000-0000-0000-000000000000"
                                        },
                                        {
                                            "key": "country_iso",
                                            "value": "US"
                                        },
                                        {
                                            "key": "fiat_currency_code",
                                            "value": "USD"
                                        },
                                        {
                                            "key": "holder_name",
                                            "value": "John Smith"
                                        },
                                        {
                                            "key": "is_personal",
                                            "value": "true"
                                        },
                                        {
                                            "key": "iban",
                                            "value": "CR99000000000000888888"
                                        },
                                        {
                                            "key": "ifsc",
                                            "value": "SBIN0005943"
                                        },
                                        {
                                            "key": "clabe",
                                            "value": "032180000118359719"
                                        },
                                        {
                                            "key": "bank_name",
                                            "value": "SunTrust"
                                        },
                                        {
                                            "key": "bank_uuid",
                                            "value": "00000000-0000-0000-0000-000000000000"
                                        },
                                        {
                                            "key": "swift_code",
                                            "value": "BC12345678"
                                        },
                                        {
                                            "key": "account_number",
                                            "value": "AL47212110090000000235698741"
                                        },
                                        {
                                            "key": "routing_number",
                                            "value": "012345678"
                                        },
                                        {
                                            "key": "additional_info",
                                            "value": "Use BIC code 123456789"
                                        },
                                        {
                                            "key": "international_details[zip]",
                                            "value": "Some text"
                                        },
                                        {
                                            "key": "international_details[city]",
                                            "value": "Some text"
                                        },
                                        {
                                            "key": "international_details[state]",
                                            "value": "Some text"
                                        },
                                        {
                                            "key": "international_details[address]",
                                            "value": "Some text"
                                        },
                                        {
                                            "key": "international_details[residency]",
                                            "value": "Some text"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/bank-account/update",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "bank-account",
                                        "update"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"iban\": \"CR99000000000000888888\",\n    \"ifsc\": \"SBIN0005943\",\n    \"clabe\": \"032180000118359719\",\n    \"bank_name\": \"SunTrust\",\n    \"bank_uuid\": \"00000000-0000-0000-0000-000000000000\",\n    \"swift_code\": \"BC12345678\",\n    \"country_iso\": \"US\",\n    \"holder_name\": \"John Smith\",\n    \"is_personal\": true,\n    \"account_number\": \"AL47212110090000000235698741\",\n    \"routing_number\": \"012345678\",\n    \"additional_info\": \"Use BIC code 123456789\",\n    \"bank_account_uuid\": \"00000000-0000-0000-0000-000000000000\",\n    \"fiat_currency_code\": \"USD\",\n    \"international_details\": {\n      \"zip\": \"Some text\",\n      \"city\": \"Some text\",\n      \"state\": \"Some text\",\n      \"address\": \"Some text\",\n      \"residency\": \"Some text\"\n    }\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "9885307a-f0bc-40b2-b9a1-0b452011ce94",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "key": "bank_account_uuid",
                                            "value": "00000000-0000-0000-0000-000000000000"
                                        },
                                        {
                                            "key": "country_iso",
                                            "value": "US"
                                        },
                                        {
                                            "key": "fiat_currency_code",
                                            "value": "USD"
                                        },
                                        {
                                            "key": "holder_name",
                                            "value": "John Smith"
                                        },
                                        {
                                            "key": "is_personal",
                                            "value": "true"
                                        },
                                        {
                                            "key": "iban",
                                            "value": "CR99000000000000888888"
                                        },
                                        {
                                            "key": "ifsc",
                                            "value": "SBIN0005943"
                                        },
                                        {
                                            "key": "clabe",
                                            "value": "032180000118359719"
                                        },
                                        {
                                            "key": "bank_name",
                                            "value": "SunTrust"
                                        },
                                        {
                                            "key": "bank_uuid",
                                            "value": "00000000-0000-0000-0000-000000000000"
                                        },
                                        {
                                            "key": "swift_code",
                                            "value": "BC12345678"
                                        },
                                        {
                                            "key": "account_number",
                                            "value": "AL47212110090000000235698741"
                                        },
                                        {
                                            "key": "routing_number",
                                            "value": "012345678"
                                        },
                                        {
                                            "key": "additional_info",
                                            "value": "Use BIC code 123456789"
                                        },
                                        {
                                            "key": "international_details[zip]",
                                            "value": "Some text"
                                        },
                                        {
                                            "key": "international_details[city]",
                                            "value": "Some text"
                                        },
                                        {
                                            "key": "international_details[state]",
                                            "value": "Some text"
                                        },
                                        {
                                            "key": "international_details[address]",
                                            "value": "Some text"
                                        },
                                        {
                                            "key": "international_details[residency]",
                                            "value": "Some text"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/bank-account/update",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "bank-account",
                                        "update"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1004,\n    \"message\": \"Error validating input data\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                }
            ],
            "id": "5d4a20cf-126c-4ba1-a43f-96ed1482abe3"
        },
        {
            "name": "notifications",
            "item": [
                {
                    "name": "notifications/list",
                    "id": "660be802-3877-4ec7-992e-9344597106d2",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "page",
                                    "value": "1",
                                    "description": "Requested page, by default is 1. Every page returns up to 50 notifications."
                                },
                                {
                                    "key": "is_read",
                                    "value": "true",
                                    "description": "If FALSE then only unread notifications will be returned. If filter is not specified, then both read and unread ones will be returned."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/notifications/list",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "notifications",
                                "list"
                            ]
                        },
                        "description": "Fetch user's notifications, ordered by creation date (latest at the top)."
                    },
                    "response": [
                        {
                            "id": "8fcab767-5feb-47bb-a6a9-a737c241c08f",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "Requested page, by default is 1. Every page returns up to 50 notifications.",
                                            "key": "page",
                                            "value": "1"
                                        },
                                        {
                                            "description": "If FALSE then only unread notifications will be returned. If filter is not specified, then both read and unread ones will be returned.",
                                            "key": "is_read",
                                            "value": "true"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/notifications/list",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "notifications",
                                        "list"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"page\": 1,\n    \"count\": 50,\n    \"limit\": 50,\n    \"total_count\": 100,\n    \"notifications\": [\n      {\n        \"id\": \"<string>\",\n        \"link\": \"/ru/buy-bitcoin\",\n        \"message\": \"You just confirmed your phone number\",\n        \"read_at\": 1592529238,\n        \"subtext\": \"voluptate\",\n        \"full_link\": \"https://paxful.com/ru/buy-bitcoin\",\n        \"timestamp\": 1592529238,\n        \"message_type\": \"js.notifications.released_seller_v2\",\n        \"uncheck_count\": 1\n      },\n      {\n        \"id\": \"<string>\",\n        \"link\": \"/ru/buy-bitcoin\",\n        \"message\": \"You just confirmed your phone number\",\n        \"read_at\": 1592529238,\n        \"subtext\": \"i\",\n        \"full_link\": \"https://paxful.com/ru/buy-bitcoin\",\n        \"timestamp\": 1592529238,\n        \"message_type\": \"js.notifications.released_seller_v2\",\n        \"uncheck_count\": 1\n      }\n    ]\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "notifications/mark-read",
                    "id": "ee8fa3fd-89c4-4f8d-af1e-6feca1d011f6",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": []
                        },
                        "url": {
                            "raw": "{{baseUrl}}/notifications/mark-read",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "notifications",
                                "mark-read"
                            ]
                        },
                        "description": "Mark all unread notifications as read."
                    },
                    "response": [
                        {
                            "id": "9ebcee54-eb63-4af3-92c8-b3bf6bc96203",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": []
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/notifications/mark-read",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "notifications",
                                        "mark-read"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {},\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "notifications/unread-count",
                    "id": "1ce0e08c-2d78-460f-b406-f933a66ae75a",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": []
                        },
                        "url": {
                            "raw": "{{baseUrl}}/notifications/unread-count",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "notifications",
                                "unread-count"
                            ]
                        },
                        "description": "Fetch the number of unread notifications."
                    },
                    "response": [
                        {
                            "id": "42b8448b-3b44-4f31-81bf-9c4584e4f7cb",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": []
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/notifications/unread-count",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "notifications",
                                        "unread-count"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"count\": 1\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                }
            ],
            "id": "16063d06-6f16-4fb2-9dee-33ed51cdb298"
        },
        {
            "name": "payment-method",
            "item": [
                {
                    "name": "payment-method/fee",
                    "id": "27e10082-307f-4227-97d0-47c73ef523ec",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "slug",
                                    "value": "applepay",
                                    "description": "Payment method slug. For a list of available payment method slugs please refer to payment-method/list endpoint."
                                },
                                {
                                    "key": "currency",
                                    "value": "USD",
                                    "description": "Fiat currency code, by default is USD. For a list of supported fiat currencies please refer to currency/list endpoint."
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/payment-method/fee",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "payment-method",
                                "fee"
                            ]
                        },
                        "description": "Fetch average positive margin for payment methods over last 3 and 10 days. Authentication is optional."
                    },
                    "response": [
                        {
                            "id": "f86fceab-76df-481c-8f92-778b9aafebcb",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "Payment method slug. For a list of available payment method slugs please refer to payment-method/list endpoint.",
                                            "key": "slug",
                                            "value": "applepay"
                                        },
                                        {
                                            "description": "Fiat currency code, by default is USD. For a list of supported fiat currencies please refer to currency/list endpoint.",
                                            "key": "currency",
                                            "value": "USD"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/payment-method/fee",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "payment-method",
                                        "fee"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"count\": 10,\n    \"btc_rate\": \"10000.00\",\n    \"fiat_currency\": \"USD\",\n    \"payment_methods\": {\n      \"gitf-card\": {\n        \"avg_to\": \"7.00\",\n        \"avg_from\": \"5.00\"\n      }\n    }\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        },
                        {
                            "id": "7dd2335c-98b6-49dd-9d36-b8d140239916",
                            "name": "Bad request",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": [
                                        {
                                            "description": "Payment method slug. For a list of available payment method slugs please refer to payment-method/list endpoint.",
                                            "key": "slug",
                                            "value": "applepay"
                                        },
                                        {
                                            "description": "Fiat currency code, by default is USD. For a list of supported fiat currencies please refer to currency/list endpoint.",
                                            "key": "currency",
                                            "value": "USD"
                                        }
                                    ]
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/payment-method/fee",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "payment-method",
                                        "fee"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": {\n    \"code\": 1004,\n    \"message\": \"Error validating input data\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                },
                {
                    "name": "payment-method/list",
                    "id": "baeb57d9-a649-4963-892a-dc734eb825e7",
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "auth": {
                            "type": "oauth2"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": []
                        },
                        "url": {
                            "raw": "{{baseUrl}}/payment-method/list",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "payment-method",
                                "list"
                            ]
                        },
                        "description": "Fetch a list of available payment methods. Authentication is optional."
                    },
                    "response": [
                        {
                            "id": "6ed96586-5e5e-4ef7-8e16-0d23edf9a1a0",
                            "name": "Success result",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": "Added as a part of security scheme: oauth2",
                                        "key": "Authorization",
                                        "value": "<token>"
                                    }
                                ],
                                "body": {
                                    "mode": "urlencoded",
                                    "urlencoded": []
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/payment-method/list",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "payment-method",
                                        "list"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "responseTime": null,
                            "body": "{\n  \"data\": [\n    {\n      \"name\": \"ApplePay\",\n      \"slug\": \"applepay\"\n    },\n    {\n      \"name\": \"ApplePay\",\n      \"slug\": \"applepay\"\n    }\n  ],\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                        }
                    ]
                }
            ],
            "id": "410e3cd3-d731-4411-896f-d18c9ac37fab"
        },
        {
            "name": "bank/list",
            "id": "7b46543b-7d52-45df-b1e7-111b86c72587",
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "request": {
                "auth": {
                    "type": "oauth2"
                },
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "urlencoded",
                    "urlencoded": [
                        {
                            "key": "country_iso",
                            "value": "US",
                            "description": "(Required) ISO country code of the offer owner."
                        }
                    ]
                },
                "url": {
                    "raw": "{{baseUrl}}/bank/list",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "bank",
                        "list"
                    ]
                },
                "description": "Fetch all available banks for the specified country."
            },
            "response": [
                {
                    "id": "781df49f-2418-4509-a362-8d6f6fcfcfb4",
                    "name": "Success result",
                    "originalRequest": {
                        "method": "POST",
                        "header": [
                            {
                                "description": "Added as a part of security scheme: oauth2",
                                "key": "Authorization",
                                "value": "<token>"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "description": "(Required) ISO country code of the offer owner.",
                                    "key": "country_iso",
                                    "value": "US"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/bank/list",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "bank",
                                "list"
                            ]
                        }
                    },
                    "status": "OK",
                    "code": 200,
                    "_postman_previewlanguage": "json",
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "cookie": [],
                    "responseTime": null,
                    "body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
                },
                {
                    "id": "0c1808f3-d332-4997-9066-58dbdf595cb8",
                    "name": "Bad request",
                    "originalRequest": {
                        "method": "POST",
                        "header": [
                            {
                                "description": "Added as a part of security scheme: oauth2",
                                "key": "Authorization",
                                "value": "<token>"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "description": "(Required) ISO country code of the offer owner.",
                                    "key": "country_iso",
                                    "value": "US"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/bank/list",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "bank",
                                "list"
                            ]
                        }
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "_postman_previewlanguage": "json",
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "cookie": [],
                    "responseTime": null,
                    "body": "{\n  \"data\": {\n    \"code\": 1004,\n    \"message\": \"Error validating input data\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                }
            ]
        },
        {
            "name": "crypto/list",
            "id": "53367fa8-7270-4166-aeb9-7c44b95cb9e8",
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "request": {
                "auth": {
                    "type": "oauth2"
                },
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "urlencoded",
                    "urlencoded": []
                },
                "url": {
                    "raw": "{{baseUrl}}/crypto/list",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "crypto",
                        "list"
                    ]
                },
                "description": "Fetch allowed cryptocurrency list. Authentication is optional."
            },
            "response": [
                {
                    "id": "61f0d7a7-607c-4878-9578-84b59217bea9",
                    "name": "Success result",
                    "originalRequest": {
                        "method": "POST",
                        "header": [
                            {
                                "description": "Added as a part of security scheme: oauth2",
                                "key": "Authorization",
                                "value": "<token>"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": []
                        },
                        "url": {
                            "raw": "{{baseUrl}}/crypto/list",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "crypto",
                                "list"
                            ]
                        }
                    },
                    "status": "OK",
                    "code": 200,
                    "_postman_previewlanguage": "json",
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "cookie": [],
                    "responseTime": null,
                    "body": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}"
                }
            ]
        },
        {
            "name": "offer-tag/list",
            "id": "60d53e39-e94e-4ba3-9873-81cb2d0104df",
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "request": {
                "auth": {
                    "type": "oauth2"
                },
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "urlencoded",
                    "urlencoded": []
                },
                "url": {
                    "raw": "{{baseUrl}}/offer-tag/list",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "offer-tag",
                        "list"
                    ]
                },
                "description": "Fetch all available tags that can be associated with offers."
            },
            "response": [
                {
                    "id": "85791529-55e8-408d-b602-f6da5c8af9e8",
                    "name": "Success result",
                    "originalRequest": {
                        "method": "POST",
                        "header": [
                            {
                                "description": "Added as a part of security scheme: oauth2",
                                "key": "Authorization",
                                "value": "<token>"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": []
                        },
                        "url": {
                            "raw": "{{baseUrl}}/offer-tag/list",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "offer-tag",
                                "list"
                            ]
                        }
                    },
                    "status": "OK",
                    "code": 200,
                    "_postman_previewlanguage": "json",
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "cookie": [],
                    "responseTime": null,
                    "body": "{\n  \"data\": {\n    \"page\": 1,\n    \"tags\": [\n      {\n        \"name\": \"no vpn\",\n        \"slug\": \"no-vpn\",\n        \"description\": \"Some text\"\n      },\n      {\n        \"name\": \"no vpn\",\n        \"slug\": \"no-vpn\",\n        \"description\": \"Some text\"\n      }\n    ],\n    \"count\": 1,\n    \"limit\": 50\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                }
            ]
        },
        {
            "name": "transactions/all",
            "id": "afc03b1b-acf0-4cfc-a18f-cd9c4516970d",
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "request": {
                "auth": {
                    "type": "oauth2"
                },
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "urlencoded",
                    "urlencoded": [
                        {
                            "key": "page",
                            "value": "1",
                            "description": "Requested page, by default is 1."
                        },
                        {
                            "key": "type",
                            "value": "all",
                            "description": "Type of transaction. Possible values: 'trade', 'non-trade', 'received', 'received-internal', 'received-external', 'sent', 'sent-internal', 'sent-external', 'hedging', 'all'. By default is 'all'."
                        },
                        {
                            "key": "limit",
                            "value": "1",
                            "description": "A number of transactions to return. By default is 100."
                        },
                        {
                            "key": "is_pending",
                            "value": "false",
                            "description": "A filter by pending/completed transactions. If TRUE, then only pending transactions are displayed. If FALSE, then only completed transactions are displayed. The default value is FALSE."
                        },
                        {
                            "key": "crypto_currency_code",
                            "value": "all",
                            "description": "Filter by cryptocurrency code. Use 'all' value to get a list of transactions with all supported cryptocurrencies. Default is btc. For a list of current supported cryptocurrencies please refer to crypto/list endpoint."
                        }
                    ]
                },
                "url": {
                    "raw": "{{baseUrl}}/transactions/all",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "transactions",
                        "all"
                    ]
                },
                "description": "Fetch a list of your transactions, optionally filtered by type."
            },
            "response": [
                {
                    "id": "55ca6579-10c8-4d7a-bd11-4368662a66a6",
                    "name": "Success result",
                    "originalRequest": {
                        "method": "POST",
                        "header": [
                            {
                                "description": "Added as a part of security scheme: oauth2",
                                "key": "Authorization",
                                "value": "<token>"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "description": "Requested page, by default is 1.",
                                    "key": "page",
                                    "value": "1"
                                },
                                {
                                    "description": "Type of transaction. Possible values: 'trade', 'non-trade', 'received', 'received-internal', 'received-external', 'sent', 'sent-internal', 'sent-external', 'hedging', 'all'. By default is 'all'.",
                                    "key": "type",
                                    "value": "all"
                                },
                                {
                                    "description": "A number of transactions to return. By default is 100.",
                                    "key": "limit",
                                    "value": "1"
                                },
                                {
                                    "description": "A filter by pending/completed transactions. If TRUE, then only pending transactions are displayed. If FALSE, then only completed transactions are displayed. The default value is FALSE.",
                                    "key": "is_pending",
                                    "value": "false"
                                },
                                {
                                    "description": "Filter by cryptocurrency code. Use 'all' value to get a list of transactions with all supported cryptocurrencies. Default is btc. For a list of current supported cryptocurrencies please refer to crypto/list endpoint.",
                                    "key": "crypto_currency_code",
                                    "value": "all"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/transactions/all",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "transactions",
                                "all"
                            ]
                        }
                    },
                    "status": "OK",
                    "code": 200,
                    "_postman_previewlanguage": "json",
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "cookie": [],
                    "responseTime": null,
                    "body": "{\n  \"data\": {\n    \"page\": 1,\n    \"count\": 1,\n    \"transactions\": [\n      {\n        \"btc\": \"0.00010000\",\n        \"time\": \"2020-09-01 11:00:41\",\n        \"type\": \"Received\",\n        \"tx_id\": \"<string>\",\n        \"sent_to\": \"<string>\",\n        \"user_note\": \"<string>\",\n        \"blockchain\": \"tron\",\n        \"trade_hash\": \"<string>\",\n        \"amount_fiat\": \"10.00\",\n        \"balance_usd\": \"10.95\",\n        \"sent_to_user\": \"To username\",\n        \"amount_crypto\": 100000,\n        \"transaction_id\": \"<string>\",\n        \"amount_crypto_full\": \"0.00010000\",\n        \"fiat_currency_code\": \"USD\",\n        \"new_crypto_balance\": 1000000,\n        \"received_from_user\": \"From username\",\n        \"crypto_currency_code\": \"BTC\",\n        \"crypto_add_to_balance\": 100000\n      },\n      {\n        \"btc\": \"0.00010000\",\n        \"time\": \"2020-09-01 11:00:41\",\n        \"type\": \"Received\",\n        \"tx_id\": \"<string>\",\n        \"sent_to\": \"<string>\",\n        \"user_note\": \"<string>\",\n        \"blockchain\": \"tron\",\n        \"trade_hash\": \"<string>\",\n        \"amount_fiat\": \"10.00\",\n        \"balance_usd\": \"10.95\",\n        \"sent_to_user\": \"To username\",\n        \"amount_crypto\": 100000,\n        \"transaction_id\": \"<string>\",\n        \"amount_crypto_full\": \"0.00010000\",\n        \"fiat_currency_code\": \"USD\",\n        \"new_crypto_balance\": 1000000,\n        \"received_from_user\": \"From username\",\n        \"crypto_currency_code\": \"BTC\",\n        \"crypto_add_to_balance\": 100000\n      }\n    ]\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                },
                {
                    "id": "2a180ac9-525e-486c-8d1e-03266c133200",
                    "name": "Bad request",
                    "originalRequest": {
                        "method": "POST",
                        "header": [
                            {
                                "description": "Added as a part of security scheme: oauth2",
                                "key": "Authorization",
                                "value": "<token>"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "description": "Requested page, by default is 1.",
                                    "key": "page",
                                    "value": "1"
                                },
                                {
                                    "description": "Type of transaction. Possible values: 'trade', 'non-trade', 'received', 'received-internal', 'received-external', 'sent', 'sent-internal', 'sent-external', 'hedging', 'all'. By default is 'all'.",
                                    "key": "type",
                                    "value": "all"
                                },
                                {
                                    "description": "A number of transactions to return. By default is 100.",
                                    "key": "limit",
                                    "value": "1"
                                },
                                {
                                    "description": "A filter by pending/completed transactions. If TRUE, then only pending transactions are displayed. If FALSE, then only completed transactions are displayed. The default value is FALSE.",
                                    "key": "is_pending",
                                    "value": "false"
                                },
                                {
                                    "description": "Filter by cryptocurrency code. Use 'all' value to get a list of transactions with all supported cryptocurrencies. Default is btc. For a list of current supported cryptocurrencies please refer to crypto/list endpoint.",
                                    "key": "crypto_currency_code",
                                    "value": "all"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/transactions/all",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "transactions",
                                "all"
                            ]
                        }
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "_postman_previewlanguage": "json",
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "cookie": [],
                    "responseTime": null,
                    "body": "{\n  \"data\": {\n    \"code\": 404,\n    \"message\": \"Not Found\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                }
            ]
        },
        {
            "name": "kiosk/transactions",
            "id": "aa57328f-520a-4efc-9a16-4727d04c0c3a",
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "request": {
                "auth": {
                    "type": "oauth2"
                },
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "urlencoded",
                    "urlencoded": [
                        {
                            "key": "page",
                            "value": "1",
                            "description": "Requested page, by default is 1"
                        }
                    ]
                },
                "url": {
                    "raw": "{{baseUrl}}/kiosk/transactions",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "kiosk",
                        "transactions"
                    ]
                },
                "description": "Fetch a list of your Kiosk affiliate transactions. Two types of transactions returned:\n    commissions you have earned when people trade through your Kiosk,\n    transfers between affiliate wallet and main wallet."
            },
            "response": [
                {
                    "id": "e29d73c9-78ab-47af-8929-f18b1c8464f6",
                    "name": "Success result",
                    "originalRequest": {
                        "method": "POST",
                        "header": [
                            {
                                "description": "Added as a part of security scheme: oauth2",
                                "key": "Authorization",
                                "value": "<token>"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "description": "Requested page, by default is 1",
                                    "key": "page",
                                    "value": "1"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/kiosk/transactions",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "kiosk",
                                "transactions"
                            ]
                        }
                    },
                    "status": "OK",
                    "code": 200,
                    "_postman_previewlanguage": "json",
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "cookie": [],
                    "responseTime": null,
                    "body": "{\n  \"data\": {\n    \"page\": 1,\n    \"count\": 1,\n    \"transactions\": [\n      {\n        \"id\": 1,\n        \"date\": \"2020-01-01T08:31:56+00:00\",\n        \"type\": \"Trade fee\",\n        \"amount_btc\": 0.00001,\n        \"amount_usd\": 2.5,\n        \"balance_btc\": 0.00001,\n        \"balance_usd\": 2.5,\n        \"payment_method\": \"applepay\",\n        \"payment_method_name\": \"ApplePay\"\n      },\n      {\n        \"id\": 1,\n        \"date\": \"2020-01-01T08:31:56+00:00\",\n        \"type\": \"Trade fee\",\n        \"amount_btc\": 0.00001,\n        \"amount_usd\": 2.5,\n        \"balance_btc\": 0.00001,\n        \"balance_usd\": 2.5,\n        \"payment_method\": \"applepay\",\n        \"payment_method_name\": \"ApplePay\"\n      }\n    ]\n  },\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                },
                {
                    "id": "da3c9bde-a2ab-413e-8ddc-12287e39b2f9",
                    "name": "Not found",
                    "originalRequest": {
                        "method": "POST",
                        "header": [
                            {
                                "description": "Added as a part of security scheme: oauth2",
                                "key": "Authorization",
                                "value": "<token>"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "description": "Requested page, by default is 1",
                                    "key": "page",
                                    "value": "1"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/kiosk/transactions",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "kiosk",
                                "transactions"
                            ]
                        }
                    },
                    "status": "Not Found",
                    "code": 404,
                    "_postman_previewlanguage": "json",
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "cookie": [],
                    "responseTime": null,
                    "body": "{\n  \"data\": {\n    \"code\": 1006,\n    \"message\": \"No access\"\n  },\n  \"status\": \"error\",\n  \"timestamp\": 1455032576\n}"
                }
            ]
        },
        {
            "name": "payment-method-group/list",
            "id": "5449e35a-a763-4d49-a125-d949141c0631",
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "request": {
                "auth": {
                    "type": "oauth2"
                },
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "urlencoded",
                    "urlencoded": [
                        {
                            "key": "locale",
                            "value": "en",
                            "description": "Locale code, e.g. ru, pt_BR."
                        }
                    ]
                },
                "url": {
                    "raw": "{{baseUrl}}/payment-method-group/list",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "payment-method-group",
                        "list"
                    ]
                },
                "description": "Fetch a list of available payment method groups. Authentication is optional."
            },
            "response": [
                {
                    "id": "68b160b9-e380-4862-84d8-f4f39fe9a07b",
                    "name": "Success result",
                    "originalRequest": {
                        "method": "POST",
                        "header": [
                            {
                                "description": "Added as a part of security scheme: oauth2",
                                "key": "Authorization",
                                "value": "<token>"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "description": "Locale code, e.g. ru, pt_BR.",
                                    "key": "locale",
                                    "value": "en"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/payment-method-group/list",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "payment-method-group",
                                "list"
                            ]
                        }
                    },
                    "status": "OK",
                    "code": 200,
                    "_postman_previewlanguage": "json",
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "cookie": [],
                    "responseTime": null,
                    "body": "{\n  \"data\": [\n    {\n      \"name\": \"Bank transfers\",\n      \"slug\": \"bank-transfers\",\n      \"description\": {\n        \"buy\": {\n          \"btc\": \"some description\",\n          \"eth\": \"some description\",\n          \"usdt\": \"some description\"\n        },\n        \"sell\": {\n          \"btc\": \"some description\",\n          \"eth\": \"some description\",\n          \"usdt\": \"some description\"\n        },\n        \"original\": \"some description\",\n        \"localized\": \"some description\"\n      },\n      \"name_localized\": \"Bank transfers\"\n    },\n    {\n      \"name\": \"Bank transfers\",\n      \"slug\": \"bank-transfers\",\n      \"description\": {\n        \"buy\": {\n          \"btc\": \"some description\",\n          \"eth\": \"some description\",\n          \"usdt\": \"some description\"\n        },\n        \"sell\": {\n          \"btc\": \"some description\",\n          \"eth\": \"some description\",\n          \"usdt\": \"some description\"\n        },\n        \"original\": \"some description\",\n        \"localized\": \"some description\"\n      },\n      \"name_localized\": \"Bank transfers\"\n    }\n  ],\n  \"status\": \"success\",\n  \"timestamp\": 1455032576\n}"
                }
            ]
        }
    ],
    "variable": [
        {
            "id": "10ab74bf-a81f-4f2c-b81f-c2dc38777650",
            "key": "baseUrl",
            "value": "https://api.paxful.com/paxful/v1",
            "type": "string"
        }
    ]
}